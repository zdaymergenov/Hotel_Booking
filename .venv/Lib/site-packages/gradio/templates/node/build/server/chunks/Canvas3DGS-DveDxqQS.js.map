{"version":3,"file":"Canvas3DGS-DveDxqQS.js","sources":["../../../../../../js/app/.svelte-kit/adapter-node/chunks/Canvas3DGS.js"],"sourcesContent":["import{create_ssr_component as at,add_attribute as Ct}from\"svelte/internal\";import{onMount as It}from\"svelte\";class h{constructor(t=0,e=0,A=0){this.x=t,this.y=e,this.z=A}equals(t){return!(this.x!==t.x||this.y!==t.y||this.z!==t.z)}add(t){return typeof t==\"number\"?new h(this.x+t,this.y+t,this.z+t):new h(this.x+t.x,this.y+t.y,this.z+t.z)}subtract(t){return typeof t==\"number\"?new h(this.x-t,this.y-t,this.z-t):new h(this.x-t.x,this.y-t.y,this.z-t.z)}multiply(t){return typeof t==\"number\"?new h(this.x*t,this.y*t,this.z*t):t instanceof h?new h(this.x*t.x,this.y*t.y,this.z*t.z):new h(this.x*t.buffer[0]+this.y*t.buffer[4]+this.z*t.buffer[8]+t.buffer[12],this.x*t.buffer[1]+this.y*t.buffer[5]+this.z*t.buffer[9]+t.buffer[13],this.x*t.buffer[2]+this.y*t.buffer[6]+this.z*t.buffer[10]+t.buffer[14])}divide(t){return typeof t==\"number\"?new h(this.x/t,this.y/t,this.z/t):new h(this.x/t.x,this.y/t.y,this.z/t.z)}cross(t){const e=this.y*t.z-this.z*t.y,A=this.z*t.x-this.x*t.z,Q=this.x*t.y-this.y*t.x;return new h(e,A,Q)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lerp(t,e){return new h(this.x+(t.x-this.x)*e,this.y+(t.y-this.y)*e,this.z+(t.z-this.z)*e)}min(t){return new h(Math.min(this.x,t.x),Math.min(this.y,t.y),Math.min(this.z,t.z))}max(t){return new h(Math.max(this.x,t.x),Math.max(this.y,t.y),Math.max(this.z,t.z))}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error(`Invalid component index: ${t}`)}}minComponent(){return this.x<this.y&&this.x<this.z?0:this.y<this.z?1:2}maxComponent(){return this.x>this.y&&this.x>this.z?0:this.y>this.z?1:2}magnitude(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}distanceTo(t){return Math.sqrt((this.x-t.x)**2+(this.y-t.y)**2+(this.z-t.z)**2)}normalize(){const t=this.magnitude();return new h(this.x/t,this.y/t,this.z/t)}flat(){return[this.x,this.y,this.z]}clone(){return new h(this.x,this.y,this.z)}toString(){return`[${this.flat().join(\", \")}]`}static One(t=1){return new h(t,t,t)}}class k{constructor(t=0,e=0,A=0,Q=1){this.x=t,this.y=e,this.z=A,this.w=Q}equals(t){return!(this.x!==t.x||this.y!==t.y||this.z!==t.z||this.w!==t.w)}normalize(){const t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return new k(this.x/t,this.y/t,this.z/t,this.w/t)}multiply(t){const e=this.w,A=this.x,Q=this.y,s=this.z,n=t.w,U=t.x,F=t.y,i=t.z;return new k(e*U+A*n+Q*i-s*F,e*F-A*i+Q*n+s*U,e*i+A*F-Q*U+s*n,e*n-A*U-Q*F-s*i)}inverse(){const t=this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w;return new k(-this.x/t,-this.y/t,-this.z/t,this.w/t)}apply(t){const e=new k(t.x,t.y,t.z,0),A=new k(-this.x,-this.y,-this.z,this.w),Q=this.multiply(e).multiply(A);return new h(Q.x,Q.y,Q.z)}flat(){return[this.x,this.y,this.z,this.w]}clone(){return new k(this.x,this.y,this.z,this.w)}static FromEuler(t){const e=t.x/2,A=t.y/2,Q=t.z/2,s=Math.cos(A),n=Math.sin(A),U=Math.cos(e),F=Math.sin(e),i=Math.cos(Q),d=Math.sin(Q);return new k(s*F*i+n*U*d,n*U*i-s*F*d,s*U*d-n*F*i,s*U*i+n*F*d)}toEuler(){const t=2*(this.w*this.x+this.y*this.z),e=1-2*(this.x*this.x+this.y*this.y),A=Math.atan2(t,e);let Q;const s=2*(this.w*this.y-this.z*this.x);Math.abs(s)>=1?Q=Math.sign(s)*Math.PI/2:Q=Math.asin(s);const n=2*(this.w*this.z+this.x*this.y),U=1-2*(this.y*this.y+this.z*this.z),F=Math.atan2(n,U);return new h(A,Q,F)}static FromMatrix3(t){const e=t.buffer,A=e[0]+e[4]+e[8];let Q,s,n,U;if(A>0){const F=.5/Math.sqrt(A+1);U=.25/F,Q=(e[7]-e[5])*F,s=(e[2]-e[6])*F,n=(e[3]-e[1])*F}else if(e[0]>e[4]&&e[0]>e[8]){const F=2*Math.sqrt(1+e[0]-e[4]-e[8]);U=(e[7]-e[5])/F,Q=.25*F,s=(e[1]+e[3])/F,n=(e[2]+e[6])/F}else if(e[4]>e[8]){const F=2*Math.sqrt(1+e[4]-e[0]-e[8]);U=(e[2]-e[6])/F,Q=(e[1]+e[3])/F,s=.25*F,n=(e[5]+e[7])/F}else{const F=2*Math.sqrt(1+e[8]-e[0]-e[4]);U=(e[3]-e[1])/F,Q=(e[2]+e[6])/F,s=(e[5]+e[7])/F,n=.25*F}return new k(Q,s,n,U)}static FromAxisAngle(t,e){const A=e/2,Q=Math.sin(A),s=Math.cos(A);return new k(t.x*Q,t.y*Q,t.z*Q,s)}static LookRotation(t){const e=new h(0,0,1),A=e.dot(t);if(Math.abs(A- -1)<1e-6)return new k(0,1,0,Math.PI);if(Math.abs(A-1)<1e-6)return new k;const Q=Math.acos(A),s=e.cross(t).normalize();return k.FromAxisAngle(s,Q)}toString(){return`[${this.flat().join(\", \")}]`}}class nt{constructor(){const t=new Map;this.addEventListener=(e,A)=>{t.has(e)||t.set(e,new Set),t.get(e).add(A)},this.removeEventListener=(e,A)=>{t.has(e)&&t.get(e).delete(A)},this.hasEventListener=(e,A)=>t.has(e)?t.get(e).has(A):!1,this.dispatchEvent=e=>{if(t.has(e.type))for(const A of t.get(e.type))A(e)}}}class X{constructor(t=1,e=0,A=0,Q=0,s=0,n=1,U=0,F=0,i=0,d=0,C=1,B=0,r=0,I=0,l=0,g=1){this.buffer=[t,e,A,Q,s,n,U,F,i,d,C,B,r,I,l,g]}equals(t){if(this.buffer.length!==t.buffer.length)return!1;if(this.buffer===t.buffer)return!0;for(let e=0;e<this.buffer.length;e++)if(this.buffer[e]!==t.buffer[e])return!1;return!0}multiply(t){const e=this.buffer,A=t.buffer;return new X(A[0]*e[0]+A[1]*e[4]+A[2]*e[8]+A[3]*e[12],A[0]*e[1]+A[1]*e[5]+A[2]*e[9]+A[3]*e[13],A[0]*e[2]+A[1]*e[6]+A[2]*e[10]+A[3]*e[14],A[0]*e[3]+A[1]*e[7]+A[2]*e[11]+A[3]*e[15],A[4]*e[0]+A[5]*e[4]+A[6]*e[8]+A[7]*e[12],A[4]*e[1]+A[5]*e[5]+A[6]*e[9]+A[7]*e[13],A[4]*e[2]+A[5]*e[6]+A[6]*e[10]+A[7]*e[14],A[4]*e[3]+A[5]*e[7]+A[6]*e[11]+A[7]*e[15],A[8]*e[0]+A[9]*e[4]+A[10]*e[8]+A[11]*e[12],A[8]*e[1]+A[9]*e[5]+A[10]*e[9]+A[11]*e[13],A[8]*e[2]+A[9]*e[6]+A[10]*e[10]+A[11]*e[14],A[8]*e[3]+A[9]*e[7]+A[10]*e[11]+A[11]*e[15],A[12]*e[0]+A[13]*e[4]+A[14]*e[8]+A[15]*e[12],A[12]*e[1]+A[13]*e[5]+A[14]*e[9]+A[15]*e[13],A[12]*e[2]+A[13]*e[6]+A[14]*e[10]+A[15]*e[14],A[12]*e[3]+A[13]*e[7]+A[14]*e[11]+A[15]*e[15])}clone(){const t=this.buffer;return new X(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])}determinant(){const t=this.buffer;return t[12]*t[9]*t[6]*t[3]-t[8]*t[13]*t[6]*t[3]-t[12]*t[5]*t[10]*t[3]+t[4]*t[13]*t[10]*t[3]+t[8]*t[5]*t[14]*t[3]-t[4]*t[9]*t[14]*t[3]-t[12]*t[9]*t[2]*t[7]+t[8]*t[13]*t[2]*t[7]+t[12]*t[1]*t[10]*t[7]-t[0]*t[13]*t[10]*t[7]-t[8]*t[1]*t[14]*t[7]+t[0]*t[9]*t[14]*t[7]+t[12]*t[5]*t[2]*t[11]-t[4]*t[13]*t[2]*t[11]-t[12]*t[1]*t[6]*t[11]+t[0]*t[13]*t[6]*t[11]+t[4]*t[1]*t[14]*t[11]-t[0]*t[5]*t[14]*t[11]-t[8]*t[5]*t[2]*t[15]+t[4]*t[9]*t[2]*t[15]+t[8]*t[1]*t[6]*t[15]-t[0]*t[9]*t[6]*t[15]-t[4]*t[1]*t[10]*t[15]+t[0]*t[5]*t[10]*t[15]}invert(){const t=this.buffer,e=this.determinant();if(e===0)throw new Error(\"Matrix is not invertible.\");const A=1/e;return new X(A*(t[5]*t[10]*t[15]-t[5]*t[11]*t[14]-t[9]*t[6]*t[15]+t[9]*t[7]*t[14]+t[13]*t[6]*t[11]-t[13]*t[7]*t[10]),A*(-t[1]*t[10]*t[15]+t[1]*t[11]*t[14]+t[9]*t[2]*t[15]-t[9]*t[3]*t[14]-t[13]*t[2]*t[11]+t[13]*t[3]*t[10]),A*(t[1]*t[6]*t[15]-t[1]*t[7]*t[14]-t[5]*t[2]*t[15]+t[5]*t[3]*t[14]+t[13]*t[2]*t[7]-t[13]*t[3]*t[6]),A*(-t[1]*t[6]*t[11]+t[1]*t[7]*t[10]+t[5]*t[2]*t[11]-t[5]*t[3]*t[10]-t[9]*t[2]*t[7]+t[9]*t[3]*t[6]),A*(-t[4]*t[10]*t[15]+t[4]*t[11]*t[14]+t[8]*t[6]*t[15]-t[8]*t[7]*t[14]-t[12]*t[6]*t[11]+t[12]*t[7]*t[10]),A*(t[0]*t[10]*t[15]-t[0]*t[11]*t[14]-t[8]*t[2]*t[15]+t[8]*t[3]*t[14]+t[12]*t[2]*t[11]-t[12]*t[3]*t[10]),A*(-t[0]*t[6]*t[15]+t[0]*t[7]*t[14]+t[4]*t[2]*t[15]-t[4]*t[3]*t[14]-t[12]*t[2]*t[7]+t[12]*t[3]*t[6]),A*(t[0]*t[6]*t[11]-t[0]*t[7]*t[10]-t[4]*t[2]*t[11]+t[4]*t[3]*t[10]+t[8]*t[2]*t[7]-t[8]*t[3]*t[6]),A*(t[4]*t[9]*t[15]-t[4]*t[11]*t[13]-t[8]*t[5]*t[15]+t[8]*t[7]*t[13]+t[12]*t[5]*t[11]-t[12]*t[7]*t[9]),A*(-t[0]*t[9]*t[15]+t[0]*t[11]*t[13]+t[8]*t[1]*t[15]-t[8]*t[3]*t[13]-t[12]*t[1]*t[11]+t[12]*t[3]*t[9]),A*(t[0]*t[5]*t[15]-t[0]*t[7]*t[13]-t[4]*t[1]*t[15]+t[4]*t[3]*t[13]+t[12]*t[1]*t[7]-t[12]*t[3]*t[5]),A*(-t[0]*t[5]*t[11]+t[0]*t[7]*t[9]+t[4]*t[1]*t[11]-t[4]*t[3]*t[9]-t[8]*t[1]*t[7]+t[8]*t[3]*t[5]),A*(-t[4]*t[9]*t[14]+t[4]*t[10]*t[13]+t[8]*t[5]*t[14]-t[8]*t[6]*t[13]-t[12]*t[5]*t[10]+t[12]*t[6]*t[9]),A*(t[0]*t[9]*t[14]-t[0]*t[10]*t[13]-t[8]*t[1]*t[14]+t[8]*t[2]*t[13]+t[12]*t[1]*t[10]-t[12]*t[2]*t[9]),A*(-t[0]*t[5]*t[14]+t[0]*t[6]*t[13]+t[4]*t[1]*t[14]-t[4]*t[2]*t[13]-t[12]*t[1]*t[6]+t[12]*t[2]*t[5]),A*(t[0]*t[5]*t[10]-t[0]*t[6]*t[9]-t[4]*t[1]*t[10]+t[4]*t[2]*t[9]+t[8]*t[1]*t[6]-t[8]*t[2]*t[5]))}static Compose(t,e,A){const Q=e.x,s=e.y,n=e.z,U=e.w,F=Q+Q,i=s+s,d=n+n,C=Q*F,B=Q*i,r=Q*d,I=s*i,l=s*d,g=n*d,R=U*F,c=U*i,u=U*d,f=A.x,D=A.y,y=A.z;return new X((1-(I+g))*f,(B+u)*f,(r-c)*f,0,(B-u)*D,(1-(C+g))*D,(l+R)*D,0,(r+c)*y,(l-R)*y,(1-(C+I))*y,0,t.x,t.y,t.z,1)}toString(){return`[${this.buffer.join(\", \")}]`}}class lt extends Event{constructor(t){super(\"objectAdded\"),this.object=t}}class dt extends Event{constructor(t){super(\"objectRemoved\"),this.object=t}}class ht extends Event{constructor(t){super(\"objectChanged\"),this.object=t}}class Ft extends nt{constructor(){super(),this.positionChanged=!1,this.rotationChanged=!1,this.scaleChanged=!1,this._position=new h,this._rotation=new k,this._scale=new h(1,1,1),this._transform=new X,this._changeEvent=new ht(this),this.update=()=>{},this.applyPosition=()=>{this.position=new h},this.applyRotation=()=>{this.rotation=new k},this.applyScale=()=>{this.scale=new h(1,1,1)},this.raiseChangeEvent=()=>{this.dispatchEvent(this._changeEvent)}}_updateMatrix(){this._transform=X.Compose(this._position,this._rotation,this._scale)}get position(){return this._position}set position(t){this._position.equals(t)||(this._position=t,this.positionChanged=!0,this._updateMatrix(),this.dispatchEvent(this._changeEvent))}get rotation(){return this._rotation}set rotation(t){this._rotation.equals(t)||(this._rotation=t,this.rotationChanged=!0,this._updateMatrix(),this.dispatchEvent(this._changeEvent))}get scale(){return this._scale}set scale(t){this._scale.equals(t)||(this._scale=t,this.scaleChanged=!0,this._updateMatrix(),this.dispatchEvent(this._changeEvent))}get forward(){let t=new h(0,0,1);return t=this.rotation.apply(t),t}get transform(){return this._transform}}class j{constructor(t=1,e=0,A=0,Q=0,s=1,n=0,U=0,F=0,i=1){this.buffer=[t,e,A,Q,s,n,U,F,i]}equals(t){if(this.buffer.length!==t.buffer.length)return!1;if(this.buffer===t.buffer)return!0;for(let e=0;e<this.buffer.length;e++)if(this.buffer[e]!==t.buffer[e])return!1;return!0}multiply(t){const e=this.buffer,A=t.buffer;return new j(A[0]*e[0]+A[3]*e[1]+A[6]*e[2],A[1]*e[0]+A[4]*e[1]+A[7]*e[2],A[2]*e[0]+A[5]*e[1]+A[8]*e[2],A[0]*e[3]+A[3]*e[4]+A[6]*e[5],A[1]*e[3]+A[4]*e[4]+A[7]*e[5],A[2]*e[3]+A[5]*e[4]+A[8]*e[5],A[0]*e[6]+A[3]*e[7]+A[6]*e[8],A[1]*e[6]+A[4]*e[7]+A[7]*e[8],A[2]*e[6]+A[5]*e[7]+A[8]*e[8])}clone(){const t=this.buffer;return new j(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8])}static Eye(t=1){return new j(t,0,0,0,t,0,0,0,t)}static Diagonal(t){return new j(t.x,0,0,0,t.y,0,0,0,t.z)}static RotationFromQuaternion(t){return new j(1-2*t.y*t.y-2*t.z*t.z,2*t.x*t.y-2*t.z*t.w,2*t.x*t.z+2*t.y*t.w,2*t.x*t.y+2*t.z*t.w,1-2*t.x*t.x-2*t.z*t.z,2*t.y*t.z-2*t.x*t.w,2*t.x*t.z-2*t.y*t.w,2*t.y*t.z+2*t.x*t.w,1-2*t.x*t.x-2*t.y*t.y)}static RotationFromEuler(t){const e=Math.cos(t.x),A=Math.sin(t.x),Q=Math.cos(t.y),s=Math.sin(t.y),n=Math.cos(t.z),U=Math.sin(t.z),F=[Q*n+s*A*U,-Q*U+s*A*n,s*e,e*U,e*n,-A,-s*n+Q*A*U,s*U+Q*A*n,Q*e];return new j(...F)}toString(){return`[${this.buffer.join(\", \")}]`}}class K{constructor(t=0,e=null,A=null,Q=null,s=null){this.changed=!1,this.detached=!1,this._vertexCount=t,this._positions=e||new Float32Array(0),this._rotations=A||new Float32Array(0),this._scales=Q||new Float32Array(0),this._colors=s||new Uint8Array(0),this._selection=new Uint8Array(this.vertexCount),this.translate=n=>{for(let U=0;U<this.vertexCount;U++)this.positions[3*U+0]+=n.x,this.positions[3*U+1]+=n.y,this.positions[3*U+2]+=n.z;this.changed=!0},this.rotate=n=>{const U=j.RotationFromQuaternion(n).buffer;for(let F=0;F<this.vertexCount;F++){const i=this.positions[3*F+0],d=this.positions[3*F+1],C=this.positions[3*F+2];this.positions[3*F+0]=U[0]*i+U[1]*d+U[2]*C,this.positions[3*F+1]=U[3]*i+U[4]*d+U[5]*C,this.positions[3*F+2]=U[6]*i+U[7]*d+U[8]*C;const B=new k(this.rotations[4*F+1],this.rotations[4*F+2],this.rotations[4*F+3],this.rotations[4*F+0]),r=n.multiply(B);this.rotations[4*F+1]=r.x,this.rotations[4*F+2]=r.y,this.rotations[4*F+3]=r.z,this.rotations[4*F+0]=r.w}this.changed=!0},this.scale=n=>{for(let U=0;U<this.vertexCount;U++)this.positions[3*U+0]*=n.x,this.positions[3*U+1]*=n.y,this.positions[3*U+2]*=n.z,this.scales[3*U+0]*=n.x,this.scales[3*U+1]*=n.y,this.scales[3*U+2]*=n.z;this.changed=!0},this.serialize=()=>{const n=new Uint8Array(this.vertexCount*K.RowLength),U=new Float32Array(n.buffer),F=new Uint8Array(n.buffer);for(let i=0;i<this.vertexCount;i++)U[8*i+0]=this.positions[3*i+0],U[8*i+1]=this.positions[3*i+1],U[8*i+2]=this.positions[3*i+2],F[32*i+24+0]=this.colors[4*i+0],F[32*i+24+1]=this.colors[4*i+1],F[32*i+24+2]=this.colors[4*i+2],F[32*i+24+3]=this.colors[4*i+3],U[8*i+3+0]=this.scales[3*i+0],U[8*i+3+1]=this.scales[3*i+1],U[8*i+3+2]=this.scales[3*i+2],F[32*i+28+0]=this.rotations[4*i+0]*128+128&255,F[32*i+28+1]=this.rotations[4*i+1]*128+128&255,F[32*i+28+2]=this.rotations[4*i+2]*128+128&255,F[32*i+28+3]=this.rotations[4*i+3]*128+128&255;return n},this.reattach=(n,U,F,i,d)=>{console.assert(n.byteLength===this.vertexCount*3*4,`Expected ${this.vertexCount*3*4} bytes, got ${n.byteLength} bytes`),this._positions=new Float32Array(n),this._rotations=new Float32Array(U),this._scales=new Float32Array(F),this._colors=new Uint8Array(i),this._selection=new Uint8Array(d),this.detached=!1}}static{this.RowLength=3*4+3*4+4+4}static Deserialize(t){const e=t.length/K.RowLength,A=new Float32Array(3*e),Q=new Float32Array(4*e),s=new Float32Array(3*e),n=new Uint8Array(4*e),U=new Float32Array(t.buffer),F=new Uint8Array(t.buffer);for(let i=0;i<e;i++)A[3*i+0]=U[8*i+0],A[3*i+1]=U[8*i+1],A[3*i+2]=U[8*i+2],Q[4*i+0]=(F[32*i+28+0]-128)/128,Q[4*i+1]=(F[32*i+28+1]-128)/128,Q[4*i+2]=(F[32*i+28+2]-128)/128,Q[4*i+3]=(F[32*i+28+3]-128)/128,s[3*i+0]=U[8*i+3+0],s[3*i+1]=U[8*i+3+1],s[3*i+2]=U[8*i+3+2],n[4*i+0]=F[32*i+24+0],n[4*i+1]=F[32*i+24+1],n[4*i+2]=F[32*i+24+2],n[4*i+3]=F[32*i+24+3];return new K(e,A,Q,s,n)}get vertexCount(){return this._vertexCount}get positions(){return this._positions}get rotations(){return this._rotations}get scales(){return this._scales}get colors(){return this._colors}get selection(){return this._selection}clone(){return new K(this.vertexCount,new Float32Array(this.positions),new Float32Array(this.rotations),new Float32Array(this.scales),new Uint8Array(this.colors))}}class tt{static{this.SH_C0=.28209479177387814}static SplatToPLY(t,e){let A=`ply\nformat binary_little_endian 1.0\n`;A+=`element vertex ${e}\n`;const Q=[\"x\",\"y\",\"z\",\"nx\",\"ny\",\"nz\",\"f_dc_0\",\"f_dc_1\",\"f_dc_2\"];for(let g=0;g<45;g++)Q.push(`f_rest_${g}`);Q.push(\"opacity\"),Q.push(\"scale_0\"),Q.push(\"scale_1\"),Q.push(\"scale_2\"),Q.push(\"rot_0\"),Q.push(\"rot_1\"),Q.push(\"rot_2\"),Q.push(\"rot_3\");for(const g of Q)A+=`property float ${g}\n`;A+=`end_header\n`;const s=new TextEncoder().encode(A),n=4*3+4*3+4*3+4*45+4+4*3+4*4,U=e*n,F=new DataView(new ArrayBuffer(s.length+U));new Uint8Array(F.buffer).set(s,0);const i=new Float32Array(t),d=new Uint8Array(t),C=s.length,B=4*3+4*3,r=B+4*3+4*45,I=r+4,l=I+4*3;for(let g=0;g<e;g++){const R=i[8*g+0],c=i[8*g+1],u=i[8*g+2],f=(d[32*g+24+0]/255-.5)/this.SH_C0,D=(d[32*g+24+1]/255-.5)/this.SH_C0,y=(d[32*g+24+2]/255-.5)/this.SH_C0,N=d[32*g+24+3]/255,w=Math.log(N/(1-N)),V=Math.log(i[8*g+3+0]),H=Math.log(i[8*g+3+1]),M=Math.log(i[8*g+3+2]);let x=new k((d[32*g+28+1]-128)/128,(d[32*g+28+2]-128)/128,(d[32*g+28+3]-128)/128,(d[32*g+28+0]-128)/128);x=x.normalize();const Z=x.w,p=x.x,P=x.y,T=x.z;F.setFloat32(C+n*g+0,R,!0),F.setFloat32(C+n*g+4,c,!0),F.setFloat32(C+n*g+8,u,!0),F.setFloat32(C+n*g+B+0,f,!0),F.setFloat32(C+n*g+B+4,D,!0),F.setFloat32(C+n*g+B+8,y,!0),F.setFloat32(C+n*g+r,w,!0),F.setFloat32(C+n*g+I+0,V,!0),F.setFloat32(C+n*g+I+4,H,!0),F.setFloat32(C+n*g+I+8,M,!0),F.setFloat32(C+n*g+l+0,Z,!0),F.setFloat32(C+n*g+l+4,p,!0),F.setFloat32(C+n*g+l+8,P,!0),F.setFloat32(C+n*g+l+12,T,!0)}return F.buffer}}class et{constructor(t,e){this.min=t,this.max=e}contains(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}intersects(t){return this.max.x>=t.min.x&&this.min.x<=t.max.x&&this.max.y>=t.min.y&&this.min.y<=t.max.y&&this.max.z>=t.min.z&&this.min.z<=t.max.z}size(){return this.max.subtract(this.min)}center(){return this.min.add(this.max).divide(2)}expand(t){this.min=this.min.min(t),this.max=this.max.max(t)}permute(){const t=this.min,e=this.max;this.min=new h(Math.min(t.x,e.x),Math.min(t.y,e.y),Math.min(t.z,e.z)),this.max=new h(Math.max(t.x,e.x),Math.max(t.y,e.y),Math.max(t.z,e.z))}}class _ extends Ft{constructor(t=void 0){super(),this.selectedChanged=!1,this.colorTransformChanged=!1,this._selected=!1,this._colorTransforms=[],this._colorTransformsMap=new Map,this._data=t||new K,this._bounds=new et(new h(1/0,1/0,1/0),new h(-1/0,-1/0,-1/0)),this.recalculateBounds=()=>{this._bounds=new et(new h(1/0,1/0,1/0),new h(-1/0,-1/0,-1/0));for(let e=0;e<this._data.vertexCount;e++)this._bounds.expand(new h(this._data.positions[3*e],this._data.positions[3*e+1],this._data.positions[3*e+2]))},this.applyPosition=()=>{this.data.translate(this.position),this.position=new h},this.applyRotation=()=>{this.data.rotate(this.rotation),this.rotation=new k},this.applyScale=()=>{this.data.scale(this.scale),this.scale=new h(1,1,1)},this.recalculateBounds()}saveToFile(t=null,e=\"splat\"){if(!document)return;if(!t){const U=new Date;t=`splat-${U.getFullYear()}-${U.getMonth()+1}-${U.getDate()}.${e}`}const A=this.clone();A.applyRotation(),A.applyScale(),A.applyPosition();const Q=A.data.serialize();let s;if(e===\"ply\"){const U=tt.SplatToPLY(Q.buffer,A.data.vertexCount);s=new Blob([U],{type:\"application/octet-stream\"})}else s=new Blob([Q.buffer],{type:\"application/octet-stream\"});const n=document.createElement(\"a\");n.download=t,n.href=URL.createObjectURL(s),n.click()}get data(){return this._data}get selected(){return this._selected}set selected(t){this._selected!==t&&(this._selected=t,this.selectedChanged=!0,this.dispatchEvent(this._changeEvent))}get colorTransforms(){return this._colorTransforms}get colorTransformsMap(){return this._colorTransformsMap}get bounds(){let t=this._bounds.center();t=t.add(this.position);let e=this._bounds.size();return e=e.multiply(this.scale),new et(t.subtract(e.divide(2)),t.add(e.divide(2)))}clone(){const t=new _(this.data.clone());return t.position=this.position.clone(),t.rotation=this.rotation.clone(),t.scale=this.scale.clone(),t}}class Rt{constructor(){this._fx=1132,this._fy=1132,this._near=.1,this._far=100,this._width=512,this._height=512,this._projectionMatrix=new X,this._viewMatrix=new X,this._viewProj=new X,this._updateProjectionMatrix=()=>{this._projectionMatrix=new X(2*this.fx/this.width,0,0,0,0,-2*this.fy/this.height,0,0,0,0,this.far/(this.far-this.near),1,0,0,-(this.far*this.near)/(this.far-this.near),0),this._viewProj=this.projectionMatrix.multiply(this.viewMatrix)},this.update=(t,e)=>{const A=j.RotationFromQuaternion(e).buffer,Q=t.flat();this._viewMatrix=new X(A[0],A[1],A[2],0,A[3],A[4],A[5],0,A[6],A[7],A[8],0,-Q[0]*A[0]-Q[1]*A[3]-Q[2]*A[6],-Q[0]*A[1]-Q[1]*A[4]-Q[2]*A[7],-Q[0]*A[2]-Q[1]*A[5]-Q[2]*A[8],1),this._viewProj=this.projectionMatrix.multiply(this.viewMatrix)},this.setSize=(t,e)=>{this._width=t,this._height=e,this._updateProjectionMatrix()}}get fx(){return this._fx}set fx(t){this._fx!==t&&(this._fx=t,this._updateProjectionMatrix())}get fy(){return this._fy}set fy(t){this._fy!==t&&(this._fy=t,this._updateProjectionMatrix())}get near(){return this._near}set near(t){this._near!==t&&(this._near=t,this._updateProjectionMatrix())}get far(){return this._far}set far(t){this._far!==t&&(this._far=t,this._updateProjectionMatrix())}get width(){return this._width}get height(){return this._height}get projectionMatrix(){return this._projectionMatrix}get viewMatrix(){return this._viewMatrix}get viewProj(){return this._viewProj}}class v{constructor(t=0,e=0,A=0,Q=0){this.x=t,this.y=e,this.z=A,this.w=Q}equals(t){return!(this.x!==t.x||this.y!==t.y||this.z!==t.z||this.w!==t.w)}add(t){return typeof t==\"number\"?new v(this.x+t,this.y+t,this.z+t,this.w+t):new v(this.x+t.x,this.y+t.y,this.z+t.z,this.w+t.w)}subtract(t){return typeof t==\"number\"?new v(this.x-t,this.y-t,this.z-t,this.w-t):new v(this.x-t.x,this.y-t.y,this.z-t.z,this.w-t.w)}multiply(t){return typeof t==\"number\"?new v(this.x*t,this.y*t,this.z*t,this.w*t):t instanceof v?new v(this.x*t.x,this.y*t.y,this.z*t.z,this.w*t.w):new v(this.x*t.buffer[0]+this.y*t.buffer[4]+this.z*t.buffer[8]+this.w*t.buffer[12],this.x*t.buffer[1]+this.y*t.buffer[5]+this.z*t.buffer[9]+this.w*t.buffer[13],this.x*t.buffer[2]+this.y*t.buffer[6]+this.z*t.buffer[10]+this.w*t.buffer[14],this.x*t.buffer[3]+this.y*t.buffer[7]+this.z*t.buffer[11]+this.w*t.buffer[15])}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lerp(t,e){return new v(this.x+(t.x-this.x)*e,this.y+(t.y-this.y)*e,this.z+(t.z-this.z)*e,this.w+(t.w-this.w)*e)}magnitude(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}distanceTo(t){return Math.sqrt((this.x-t.x)**2+(this.y-t.y)**2+(this.z-t.z)**2+(this.w-t.w)**2)}normalize(){const t=this.magnitude();return new v(this.x/t,this.y/t,this.z/t,this.w/t)}flat(){return[this.x,this.y,this.z,this.w]}clone(){return new v(this.x,this.y,this.z,this.w)}toString(){return`[${this.flat().join(\", \")}]`}}class ct extends Ft{constructor(t=void 0){super(),this._data=t||new Rt,this._position=new h(0,0,-5),this.update=()=>{this.data.update(this.position,this.rotation)},this.screenPointToRay=(e,A)=>{const Q=new v(e,A,-1,1),s=this._data.projectionMatrix.invert(),n=Q.multiply(s),U=this._data.viewMatrix.invert(),F=n.multiply(U);return new h(F.x/F.w,F.y/F.w,F.z/F.w).subtract(this.position).normalize()}}get data(){return this._data}}class Et extends nt{constructor(){super(),this._objects=[],this.addObject=t=>{this.objects.push(t),this.dispatchEvent(new lt(t))},this.removeObject=t=>{const e=this.objects.indexOf(t);if(e<0)throw new Error(\"Object not found in scene\");this.objects.splice(e,1),this.dispatchEvent(new dt(t))},this.findObject=t=>{for(const e of this.objects)if(t(e))return e},this.findObjectOfType=t=>{for(const e of this.objects)if(e instanceof t)return e},this.reset=()=>{const t=this.objects.slice();for(const e of t)this.removeObject(e)},this.reset()}getMergedSceneDataBuffer(t=\"splat\"){const e=[];let A=0;for(const n of this.objects)if(n instanceof _){const U=n.clone();U.applyRotation(),U.applyScale(),U.applyPosition();const F=U.data.serialize();e.push(F),A+=U.data.vertexCount}const Q=new Uint8Array(A*K.RowLength);let s=0;for(const n of e)Q.set(n,s),s+=n.length;return t===\"ply\"?tt.SplatToPLY(Q.buffer,A):Q.buffer}saveToFile(t=null,e=\"splat\"){if(!document)return;if(!t){const n=new Date;t=`scene-${n.getFullYear()}-${n.getMonth()+1}-${n.getDate()}.${e}`}const A=this.getMergedSceneDataBuffer(e),Q=new Blob([A],{type:\"application/octet-stream\"}),s=document.createElement(\"a\");s.download=t,s.href=URL.createObjectURL(Q),s.click()}get objects(){return this._objects}}async function it(E,t){const e=await fetch(E,{mode:\"cors\",credentials:\"omit\",cache:t?\"force-cache\":\"default\"});if(e.status!=200)throw new Error(e.status+\" Unable to load \"+e.url);return e}async function st(E,t){const e=E.body.getReader(),A=E.headers.get(\"content-length\"),Q=A&&!isNaN(parseInt(A))?parseInt(A):void 0,s=[];let n=0;for(;;){const{done:i,value:d}=await e.read();if(i)break;if(s.push(d),n+=d.length,t&&Q){const C=n/Q,B=Math.min(C*.95,.95);t(B)}}const U=new Uint8Array(n);let F=0;for(const i of s)U.set(i,F),F+=i.length;return t&&t(1),U}class St{static async LoadAsync(t,e,A,Q=!1){const s=await it(t,Q),n=await st(s,A);return this.LoadFromArrayBuffer(n.buffer,e)}static async LoadFromFileAsync(t,e,A){const Q=new FileReader;let s=new _;return Q.onload=n=>{s=this.LoadFromArrayBuffer(n.target.result,e)},Q.onprogress=n=>{A?.(n.loaded/n.total)},Q.readAsArrayBuffer(t),await new Promise(n=>{Q.onloadend=()=>{n()}}),s}static LoadFromArrayBuffer(t,e){const A=new Uint8Array(t),Q=K.Deserialize(A),s=new _(Q);return e.addObject(s),s}}class Jt{static async LoadAsync(t,e,A,Q=\"\",s=!1){const n=await it(t,s),U=await st(n,A);if(U[0]!==112||U[1]!==108||U[2]!==121||U[3]!==10)throw new Error(\"Invalid PLY file\");return this.LoadFromArrayBuffer(U.buffer,e,Q)}static async LoadFromFileAsync(t,e,A,Q=\"\"){const s=new FileReader;let n=new _;return s.onload=U=>{n=this.LoadFromArrayBuffer(U.target.result,e,Q)},s.onprogress=U=>{A?.(U.loaded/U.total)},s.readAsArrayBuffer(t),await new Promise(U=>{s.onloadend=()=>{U()}}),n}static LoadFromArrayBuffer(t,e,A=\"\"){const Q=new Uint8Array(this._ParsePLYBuffer(t,A)),s=K.Deserialize(Q),n=new _(s);return e.addObject(n),n}static _ParsePLYBuffer(t,e){const A=new Uint8Array(t),Q=new TextDecoder().decode(A.slice(0,1024*10)),s=`end_header\n`,n=Q.indexOf(s);if(n<0)throw new Error(\"Unable to read .ply file header\");const U=parseInt(/element vertex (\\d+)\\n/.exec(Q)[1]);let F=0;const i={double:8,int:4,uint:4,float:4,short:2,ushort:2,uchar:1},d=[];for(const I of Q.slice(0,n).split(`\n`).filter(l=>l.startsWith(\"property \"))){const[l,g,R]=I.split(\" \");if(d.push({name:R,type:g,offset:F}),!i[g])throw new Error(`Unsupported property type: ${g}`);F+=i[g]}const C=new DataView(t,n+s.length),B=new ArrayBuffer(K.RowLength*U),r=k.FromEuler(new h(Math.PI/2,0,0));for(let I=0;I<U;I++){const l=new Float32Array(B,I*K.RowLength,3),g=new Float32Array(B,I*K.RowLength+12,3),R=new Uint8ClampedArray(B,I*K.RowLength+24,4),c=new Uint8ClampedArray(B,I*K.RowLength+28,4);let u=255,f=0,D=0,y=0;d.forEach(w=>{let V;switch(w.type){case\"float\":V=C.getFloat32(w.offset+I*F,!0);break;case\"int\":V=C.getInt32(w.offset+I*F,!0);break;default:throw new Error(`Unsupported property type: ${w.type}`)}switch(w.name){case\"x\":l[0]=V;break;case\"y\":l[1]=V;break;case\"z\":l[2]=V;break;case\"scale_0\":case\"scaling_0\":g[0]=Math.exp(V);break;case\"scale_1\":case\"scaling_1\":g[1]=Math.exp(V);break;case\"scale_2\":case\"scaling_2\":g[2]=Math.exp(V);break;case\"red\":R[0]=V;break;case\"green\":R[1]=V;break;case\"blue\":R[2]=V;break;case\"f_dc_0\":case\"features_0\":R[0]=(.5+tt.SH_C0*V)*255;break;case\"f_dc_1\":case\"features_1\":R[1]=(.5+tt.SH_C0*V)*255;break;case\"f_dc_2\":case\"features_2\":R[2]=(.5+tt.SH_C0*V)*255;break;case\"f_dc_3\":R[3]=(.5+tt.SH_C0*V)*255;break;case\"opacity\":case\"opacity_0\":R[3]=1/(1+Math.exp(-V))*255;break;case\"rot_0\":case\"rotation_0\":u=V;break;case\"rot_1\":case\"rotation_1\":f=V;break;case\"rot_2\":case\"rotation_2\":D=V;break;case\"rot_3\":case\"rotation_3\":y=V;break}});let N=new k(f,D,y,u);switch(e){case\"polycam\":{const w=l[1];l[1]=-l[2],l[2]=w,N=r.multiply(N);break}case\"\":break;default:throw new Error(`Unsupported format: ${e}`)}N=N.normalize(),c[0]=N.w*128+128,c[1]=N.x*128+128,c[2]=N.y*128+128,c[3]=N.z*128+128}return B}}const Bt=\"\",Vt=E=>Uint8Array.from(atob(E),t=>t.charCodeAt(0)),Qt=typeof self<\"u\"&&self.Blob&&new Blob([\"URL.revokeObjectURL(import.meta.url);\",Vt(Bt)],{type:\"text/javascript;charset=utf-8\"});function Zt(E){let t;try{if(t=Qt&&(self.URL||self.webkitURL).createObjectURL(Qt),!t)throw\"\";const e=new Worker(t,{type:\"module\",name:E?.name});return e.addEventListener(\"error\",()=>{(self.URL||self.webkitURL).revokeObjectURL(t)}),e}catch{return new Worker(\"data:text/javascript;base64,\"+Bt,{type:\"module\",name:E?.name})}}class mt{constructor(t,e){this._scene=null,this._camera=null,this._started=!1,this._initialized=!1,this._renderer=t;const A=t.gl;this._program=A.createProgram(),this._passes=e||[];const Q=A.createShader(A.VERTEX_SHADER);A.shaderSource(Q,this._getVertexSource()),A.compileShader(Q),A.getShaderParameter(Q,A.COMPILE_STATUS)||console.error(A.getShaderInfoLog(Q));const s=A.createShader(A.FRAGMENT_SHADER);A.shaderSource(s,this._getFragmentSource()),A.compileShader(s),A.getShaderParameter(s,A.COMPILE_STATUS)||console.error(A.getShaderInfoLog(s)),A.attachShader(this.program,Q),A.attachShader(this.program,s),A.linkProgram(this.program),A.getProgramParameter(this.program,A.LINK_STATUS)||console.error(A.getProgramInfoLog(this.program)),this.resize=()=>{A.useProgram(this._program),this._resize()},this.initialize=()=>{console.assert(!this._initialized,\"ShaderProgram already initialized\"),A.useProgram(this._program),this._initialize();for(const n of this.passes)n.initialize(this);this._initialized=!0,this._started=!0},this.render=(n,U)=>{A.useProgram(this._program),(this._scene!==n||this._camera!==U)&&(this.dispose(),this._scene=n,this._camera=U,this.initialize());for(const F of this.passes)F.render();this._render()},this.dispose=()=>{if(this._initialized){A.useProgram(this._program);for(const n of this.passes)n.dispose();this._dispose(),this._scene=null,this._camera=null,this._initialized=!1}}}get renderer(){return this._renderer}get scene(){return this._scene}get camera(){return this._camera}get program(){return this._program}get passes(){return this._passes}get started(){return this._started}}const ot=\"\",Nt=E=>Uint8Array.from(atob(E),t=>t.charCodeAt(0)),At=typeof self<\"u\"&&self.Blob&&new Blob([\"URL.revokeObjectURL(import.meta.url);\",Nt(ot)],{type:\"text/javascript;charset=utf-8\"});function Wt(E){let t;try{if(t=At&&(self.URL||self.webkitURL).createObjectURL(At),!t)throw\"\";const e=new Worker(t,{type:\"module\",name:E?.name});return e.addEventListener(\"error\",()=>{(self.URL||self.webkitURL).revokeObjectURL(t)}),e}catch{return new Worker(\"data:text/javascript;base64,\"+ot,{type:\"module\",name:E?.name})}}var ut=function(E={}){var t,e=E,A=import.meta.url,Q=\"\",s;{try{Q=new URL(\".\",A).href}catch{}s=a=>{var J=new XMLHttpRequest;return J.open(\"GET\",a,!1),J.responseType=\"arraybuffer\",J.send(null),new Uint8Array(J.response)}}console.log.bind(console),console.error.bind(console);var n,U,F;function i(){var a=U.buffer;e.HEAPU8=F=new Uint8Array(a),e.HEAPU32=new Uint32Array(a),e.HEAPF32=new Float32Array(a),new BigInt64Array(a),new BigUint64Array(a)}function d(){if(e.preRun)for(typeof e.preRun==\"function\"&&(e.preRun=[e.preRun]);e.preRun.length;)M(e.preRun.shift());N(H)}function C(){z.c()}function B(){if(e.postRun)for(typeof e.postRun==\"function\"&&(e.postRun=[e.postRun]);e.postRun.length;)V(e.postRun.shift());N(w)}var r=0,I=null;function l(a){r++,e.monitorRunDependencies?.(r)}function g(a){if(r--,e.monitorRunDependencies?.(r),r==0&&I){var J=I;I=null,J()}}var R;function c(){return x(\"\")}function u(a){if(ArrayBuffer.isView(a))return a;if(a==R&&n)return new Uint8Array(n);if(s)return s(a);throw'sync fetching of the wasm failed: you can preload it to Module[\"wasmBinary\"] manually, or emcc.py will do that for you when generating HTML (but not JS)'}function f(a,J){var G,m=u(a);G=new WebAssembly.Module(m);var Y=new WebAssembly.Instance(G,J);return[Y,G]}function D(){return{a:b}}function y(){function a(m,Y){return z=m.exports,U=z.b,i(),W(z),g(),z}l();var J=D();if(e.instantiateWasm)return new Promise((m,Y)=>{e.instantiateWasm(J,(O,$)=>{m(a(O))})});R??=c();var G=f(R,J);return a(G[0])}for(var N=a=>{for(;a.length>0;)a.shift()(e)},w=[],V=a=>w.push(a),H=[],M=a=>H.push(a),x=a=>{for(var J,G,m=0,Y=0,O=a.length,$=new Uint8Array((O*3>>2)-(a[O-2]==\"=\")-(a[O-1]==\"=\"));m<O;m+=4,Y+=3)J=o[a.charCodeAt(m+1)],G=o[a.charCodeAt(m+2)],$[Y]=o[a.charCodeAt(m)]<<2|J>>4,$[Y+1]=J<<4|G>>2,$[Y+2]=G<<6|o[a.charCodeAt(m+3)];return $},Z=()=>2147483648,p=(a,J)=>Math.ceil(a/J)*J,P=a=>{var J=U.buffer,G=(a-J.byteLength+65535)/65536|0;try{return U.grow(G),i(),1}catch{}},T=a=>{var J=F.length;a>>>=0;var G=Z();if(a>G)return!1;for(var m=1;m<=4;m*=2){var Y=J*(1+.2/m);Y=Math.min(Y,a+100663296);var O=Math.min(G,p(Math.max(a,Y),65536)),$=P(O);if($)return!0}return!1},o=new Uint8Array(123),S=25;S>=0;--S)o[48+S]=52+S,o[65+S]=S,o[97+S]=26+S;o[43]=62,o[47]=63,e.noExitRuntime&&e.noExitRuntime,e.print&&e.print,e.printErr&&e.printErr,e.wasmBinary&&(n=e.wasmBinary),e.arguments&&e.arguments,e.thisProgram&&e.thisProgram;function W(a){e._pack=a.d,e._malloc=a.e,e._free=a.f}var b={a:T},z=y();function q(){if(r>0){I=q;return}if(d(),r>0){I=q;return}function a(){e.calledRun=!0,C(),e.onRuntimeInitialized?.(),B()}e.setStatus?(e.setStatus(\"Running...\"),setTimeout(()=>{setTimeout(()=>e.setStatus(\"\"),1),a()},1)):a()}function L(){if(e.preInit)for(typeof e.preInit==\"function\"&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.shift()()}return L(),q(),t=e,t};const Dt=()=>new Wt;class Ut{constructor(t){this.dataChanged=!1,this.transformsChanged=!1,this.colorTransformsChanged=!1,this._updating=new Set,this._dirty=new Set;let e=0,A=0;this._splatIndices=new Map,this._offsets=new Map;const Q=new Map;for(const B of t.objects)B instanceof _&&(this._splatIndices.set(B,A),this._offsets.set(B,e),Q.set(e,B),e+=B.data.vertexCount,A++);this._vertexCount=e,this._width=2048,this._height=Math.ceil(2*this.vertexCount/this.width),this._data=new Uint32Array(this.width*this.height*4),this._transformsWidth=5,this._transformsHeight=Q.size,this._transforms=new Float32Array(this._transformsWidth*this._transformsHeight*4),this._transformIndicesWidth=1024,this._transformIndicesHeight=Math.ceil(this.vertexCount/this._transformIndicesWidth),this._transformIndices=new Uint32Array(this._transformIndicesWidth*this._transformIndicesHeight),this._colorTransformsWidth=4,this._colorTransformsHeight=64,this._colorTransforms=new Float32Array(this._colorTransformsWidth*this._colorTransformsHeight*4),this._colorTransforms.fill(0),this._colorTransforms[0]=1,this._colorTransforms[5]=1,this._colorTransforms[10]=1,this._colorTransforms[15]=1,this._colorTransformIndicesWidth=1024,this._colorTransformIndicesHeight=Math.ceil(this.vertexCount/this._colorTransformIndicesWidth),this._colorTransformIndices=new Uint32Array(this._colorTransformIndicesWidth*this._colorTransformIndicesHeight),this.colorTransformIndices.fill(0),this._positions=new Float32Array(this.vertexCount*3),this._rotations=new Float32Array(this.vertexCount*4),this._scales=new Float32Array(this.vertexCount*3),this._worker=Dt();const s=B=>{const r=this._splatIndices.get(B);this._transforms.set(B.transform.buffer,r*20),this._transforms[r*20+16]=B.selected?1:0,B.positionChanged=!1,B.rotationChanged=!1,B.scaleChanged=!1,B.selectedChanged=!1,this.transformsChanged=!0},n=()=>{let B=!1;for(const l of this._splatIndices.keys())if(l.colorTransformChanged){B=!0;break}if(!B)return;const r=[new X];this._colorTransformIndices.fill(0);let I=1;for(const l of this._splatIndices.keys()){const g=this._offsets.get(l);for(const R of l.colorTransforms)r.includes(R)||(r.push(R),I++);for(const R of l.colorTransformsMap.keys()){const c=l.colorTransformsMap.get(R);this._colorTransformIndices[R+g]=c+I-1}l.colorTransformChanged=!1}for(let l=0;l<r.length;l++){const g=r[l];this._colorTransforms.set(g.buffer,l*16)}this.colorTransformsChanged=!0};this._worker.onmessage=B=>{if(B.data.response){const r=B.data.response,I=Q.get(r.offset);s(I),n();const l=this._splatIndices.get(I);for(let g=0;g<I.data.vertexCount;g++)this._transformIndices[r.offset+g]=l;this._data.set(r.data,r.offset*8),I.data.reattach(r.positions,r.rotations,r.scales,r.colors,r.selection),this._positions.set(r.worldPositions,r.offset*3),this._rotations.set(r.worldRotations,r.offset*4),this._scales.set(r.worldScales,r.offset*3),this._updating.delete(I),I.selectedChanged=!1,this.dataChanged=!0}};let U;async function F(){U=await ut()}F();async function i(){for(;!U;)await new Promise(B=>setTimeout(B,0))}const d=B=>{if(!U){i().then(()=>{d(B)});return}s(B);const r=U._malloc(3*B.data.vertexCount*4),I=U._malloc(4*B.data.vertexCount*4),l=U._malloc(3*B.data.vertexCount*4),g=U._malloc(4*B.data.vertexCount),R=U._malloc(B.data.vertexCount),c=U._malloc(8*B.data.vertexCount*4),u=U._malloc(3*B.data.vertexCount*4),f=U._malloc(4*B.data.vertexCount*4),D=U._malloc(3*B.data.vertexCount*4);U.HEAPF32.set(B.data.positions,r/4),U.HEAPF32.set(B.data.rotations,I/4),U.HEAPF32.set(B.data.scales,l/4),U.HEAPU8.set(B.data.colors,g),U.HEAPU8.set(B.data.selection,R),U._pack(B.selected,B.data.vertexCount,r,I,l,g,R,c,u,f,D);const y=new Uint32Array(U.HEAPU32.buffer,c,B.data.vertexCount*8),N=new Float32Array(U.HEAPF32.buffer,u,B.data.vertexCount*3),w=new Float32Array(U.HEAPF32.buffer,f,B.data.vertexCount*4),V=new Float32Array(U.HEAPF32.buffer,D,B.data.vertexCount*3),H=this._splatIndices.get(B),M=this._offsets.get(B);for(let x=0;x<B.data.vertexCount;x++)this._transformIndices[M+x]=H;this._data.set(y,M*8),this._positions.set(N,M*3),this._rotations.set(w,M*4),this._scales.set(V,M*3),U._free(r),U._free(I),U._free(l),U._free(g),U._free(R),U._free(c),U._free(u),U._free(f),U._free(D),this.dataChanged=!0,this.colorTransformsChanged=!0},C=B=>{if((B.positionChanged||B.rotationChanged||B.scaleChanged||B.selectedChanged)&&s(B),B.colorTransformChanged&&n(),!B.data.changed||B.data.detached)return;const r={position:new Float32Array(B.position.flat()),rotation:new Float32Array(B.rotation.flat()),scale:new Float32Array(B.scale.flat()),selected:B.selected,vertexCount:B.data.vertexCount,positions:B.data.positions,rotations:B.data.rotations,scales:B.data.scales,colors:B.data.colors,selection:B.data.selection,offset:this._offsets.get(B)};this._worker.postMessage({splat:r},[r.position.buffer,r.rotation.buffer,r.scale.buffer,r.positions.buffer,r.rotations.buffer,r.scales.buffer,r.colors.buffer,r.selection.buffer]),this._updating.add(B),B.data.detached=!0};this.getSplat=B=>{let r=null;for(const[I,l]of this._offsets)if(B>=l)r=I;else break;return r},this.getLocalIndex=(B,r)=>{const I=this._offsets.get(B);return r-I},this.markDirty=B=>{this._dirty.add(B)},this.rebuild=()=>{for(const B of this._dirty)C(B);this._dirty.clear()},this.dispose=()=>{this._worker.terminate()};for(const B of this._splatIndices.keys())d(B);n()}get offsets(){return this._offsets}get data(){return this._data}get width(){return this._width}get height(){return this._height}get transforms(){return this._transforms}get transformsWidth(){return this._transformsWidth}get transformsHeight(){return this._transformsHeight}get transformIndices(){return this._transformIndices}get transformIndicesWidth(){return this._transformIndicesWidth}get transformIndicesHeight(){return this._transformIndicesHeight}get colorTransforms(){return this._colorTransforms}get colorTransformsWidth(){return this._colorTransformsWidth}get colorTransformsHeight(){return this._colorTransformsHeight}get colorTransformIndices(){return this._colorTransformIndices}get colorTransformIndicesWidth(){return this._colorTransformIndicesWidth}get colorTransformIndicesHeight(){return this._colorTransformIndicesHeight}get positions(){return this._positions}get rotations(){return this._rotations}get scales(){return this._scales}get vertexCount(){return this._vertexCount}get needsRebuild(){return this._dirty.size>0}get updating(){return this._updating.size>0}}class rt{constructor(t=0,e=0,A=0,Q=255){this.r=t,this.g=e,this.b=A,this.a=Q}flat(){return[this.r,this.g,this.b,this.a]}flatNorm(){return[this.r/255,this.g/255,this.b/255,this.a/255]}toHexString(){return\"#\"+this.flat().map(t=>t.toString(16).padStart(2,\"0\")).join(\"\")}toString(){return`[${this.flat().join(\", \")}]`}}const pt=()=>new Zt,kt=`#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform highp usampler2D u_texture;\nuniform highp sampler2D u_transforms;\nuniform highp usampler2D u_transformIndices;\nuniform highp sampler2D u_colorTransforms;\nuniform highp usampler2D u_colorTransformIndices;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\n\nuniform bool useDepthFade;\nuniform float depthFade;\n\nin vec2 position;\nin int index;\n\nout vec4 vColor;\nout vec2 vPosition;\nout float vSize;\nout float vSelected;\n\nvoid main () {\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\n    float selected = float((cen.w >> 24) & 0xffu);\n\n    uint transformIndex = texelFetch(u_transformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 transform = mat4(\n        texelFetch(u_transforms, ivec2(0, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(1, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(2, transformIndex), 0),\n        texelFetch(u_transforms, ivec2(3, transformIndex), 0)\n    );\n\n    if (selected < 0.5) {\n        selected = texelFetch(u_transforms, ivec2(4, transformIndex), 0).x;\n    }\n\n    mat4 viewTransform = view * transform;\n\n    vec4 cam = viewTransform * vec4(uintBitsToFloat(cen.xyz), 1);\n    vec4 pos2d = projection * cam;\n\n    float clip = 1.2 * pos2d.w;\n    if (pos2d.z < -pos2d.w || pos2d.z > pos2d.w || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\n\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n\n    mat3 T = transpose(mat3(viewTransform)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n\n    //ref: https://github.com/graphdeco-inria/diff-gaussian-rasterization/blob/main/cuda_rasterizer/forward.cu#L110-L111\n    cov2d[0][0] += 0.3;\n    cov2d[1][1] += 0.3;\n\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n\n    if (lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n    uint colorTransformIndex = texelFetch(u_colorTransformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\n    mat4 colorTransform = mat4(\n        texelFetch(u_colorTransforms, ivec2(0, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(1, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(2, colorTransformIndex), 0),\n        texelFetch(u_colorTransforms, ivec2(3, colorTransformIndex), 0)\n    );\n\n    vec4 color = vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\n    vColor = colorTransform * color;\n\n    vPosition = position;\n    vSize = length(majorAxis);\n    vSelected = selected;\n\n    float scalingFactor = 1.0;\n\n    if (useDepthFade) {\n        float depthNorm = (pos2d.z / pos2d.w + 1.0) / 2.0;\n        float near = 0.1; float far = 100.0;\n        float normalizedDepth = (2.0 * near) / (far + near - depthNorm * (far - near));\n        float start = max(normalizedDepth - 0.1, 0.0);\n        float end = min(normalizedDepth + 0.1, 1.0);\n        scalingFactor = clamp((depthFade - start) / (end - start), 0.0, 1.0);\n    }\n\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis * scalingFactor / viewport\n        + position.y * minorAxis * scalingFactor / viewport, 0.0, 1.0);\n}\n`,yt=`#version 300 es\nprecision highp float;\n\nuniform float outlineThickness;\nuniform vec4 outlineColor;\n\nin vec4 vColor;\nin vec2 vPosition;\nin float vSize;\nin float vSelected;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n\n    if (A < -4.0) discard;\n\n    if (vSelected < 0.5) {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n        return;\n    }\n\n    float outlineThreshold = -4.0 + (outlineThickness / vSize);\n\n    if (A < outlineThreshold) {\n        fragColor = outlineColor;\n    } \n    else {\n        float B = exp(A) * vColor.a;\n        fragColor = vec4(B * vColor.rgb, B);\n    }\n}\n`;class gt extends mt{constructor(t,e){super(t,e),this._outlineThickness=10,this._outlineColor=new rt(255,165,0,255),this._renderData=null,this._depthIndex=new Uint32Array,this._splatTexture=null,this._worker=null;const A=t.canvas,Q=t.gl;let s,n,U,F,i,d,C,B,r,I,l,g,R,c,u,f,D,y,N;this._resize=()=>{this._camera&&(this._camera.data.setSize(A.width,A.height),this._camera.update(),s=Q.getUniformLocation(this.program,\"projection\"),Q.uniformMatrix4fv(s,!1,this._camera.data.projectionMatrix.buffer),n=Q.getUniformLocation(this.program,\"viewport\"),Q.uniform2fv(n,new Float32Array([A.width,A.height])))};const w=()=>{this._worker=pt(),this._worker.onmessage=Z=>{if(Z.data.depthIndex){const{depthIndex:p}=Z.data;this._depthIndex=p,Q.bindBuffer(Q.ARRAY_BUFFER,N),Q.bufferData(Q.ARRAY_BUFFER,p,Q.STATIC_DRAW)}}};this._initialize=()=>{if(!this._scene||!this._camera){console.error(\"Cannot render without scene and camera\");return}this._resize(),this._scene.addEventListener(\"objectAdded\",V),this._scene.addEventListener(\"objectRemoved\",H);for(const Z of this._scene.objects)Z instanceof _&&Z.addEventListener(\"objectChanged\",M);this._renderData=new Ut(this._scene),U=Q.getUniformLocation(this.program,\"focal\"),Q.uniform2fv(U,new Float32Array([this._camera.data.fx,this._camera.data.fy])),F=Q.getUniformLocation(this.program,\"view\"),Q.uniformMatrix4fv(F,!1,this._camera.data.viewMatrix.buffer),I=Q.getUniformLocation(this.program,\"outlineThickness\"),Q.uniform1f(I,this.outlineThickness),l=Q.getUniformLocation(this.program,\"outlineColor\"),Q.uniform4fv(l,new Float32Array(this.outlineColor.flatNorm())),this._splatTexture=Q.createTexture(),i=Q.getUniformLocation(this.program,\"u_texture\"),Q.uniform1i(i,0),c=Q.createTexture(),d=Q.getUniformLocation(this.program,\"u_transforms\"),Q.uniform1i(d,1),u=Q.createTexture(),C=Q.getUniformLocation(this.program,\"u_transformIndices\"),Q.uniform1i(C,2),f=Q.createTexture(),B=Q.getUniformLocation(this.program,\"u_colorTransforms\"),Q.uniform1i(B,3),D=Q.createTexture(),r=Q.getUniformLocation(this.program,\"u_colorTransformIndices\"),Q.uniform1i(r,4),y=Q.createBuffer(),Q.bindBuffer(Q.ARRAY_BUFFER,y),Q.bufferData(Q.ARRAY_BUFFER,new Float32Array([-2,-2,2,-2,2,2,-2,2]),Q.STATIC_DRAW),g=Q.getAttribLocation(this.program,\"position\"),Q.enableVertexAttribArray(g),Q.vertexAttribPointer(g,2,Q.FLOAT,!1,0,0),N=Q.createBuffer(),R=Q.getAttribLocation(this.program,\"index\"),Q.enableVertexAttribArray(R),Q.bindBuffer(Q.ARRAY_BUFFER,N),w()};const V=Z=>{const p=Z;p.object instanceof _&&p.object.addEventListener(\"objectChanged\",M),x()},H=Z=>{const p=Z;p.object instanceof _&&p.object.removeEventListener(\"objectChanged\",M),x()},M=Z=>{const p=Z;p.object instanceof _&&this._renderData&&this._renderData.markDirty(p.object)},x=()=>{this._renderData?.dispose(),this._renderData=new Ut(this._scene),this._worker?.terminate(),w()};this._render=()=>{if(!this._scene||!this._camera||!this.renderData){console.error(\"Cannot render without scene and camera\");return}if(this.renderData.needsRebuild&&this.renderData.rebuild(),this.renderData.dataChanged||this.renderData.transformsChanged||this.renderData.colorTransformsChanged){this.renderData.dataChanged&&(Q.activeTexture(Q.TEXTURE0),Q.bindTexture(Q.TEXTURE_2D,this.splatTexture),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_WRAP_S,Q.CLAMP_TO_EDGE),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_WRAP_T,Q.CLAMP_TO_EDGE),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_MIN_FILTER,Q.NEAREST),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_MAG_FILTER,Q.NEAREST),Q.texImage2D(Q.TEXTURE_2D,0,Q.RGBA32UI,this.renderData.width,this.renderData.height,0,Q.RGBA_INTEGER,Q.UNSIGNED_INT,this.renderData.data)),this.renderData.transformsChanged&&(Q.activeTexture(Q.TEXTURE1),Q.bindTexture(Q.TEXTURE_2D,c),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_WRAP_S,Q.CLAMP_TO_EDGE),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_WRAP_T,Q.CLAMP_TO_EDGE),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_MIN_FILTER,Q.NEAREST),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_MAG_FILTER,Q.NEAREST),Q.texImage2D(Q.TEXTURE_2D,0,Q.RGBA32F,this.renderData.transformsWidth,this.renderData.transformsHeight,0,Q.RGBA,Q.FLOAT,this.renderData.transforms),Q.activeTexture(Q.TEXTURE2),Q.bindTexture(Q.TEXTURE_2D,u),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_WRAP_S,Q.CLAMP_TO_EDGE),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_WRAP_T,Q.CLAMP_TO_EDGE),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_MIN_FILTER,Q.NEAREST),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_MAG_FILTER,Q.NEAREST),Q.texImage2D(Q.TEXTURE_2D,0,Q.R32UI,this.renderData.transformIndicesWidth,this.renderData.transformIndicesHeight,0,Q.RED_INTEGER,Q.UNSIGNED_INT,this.renderData.transformIndices)),this.renderData.colorTransformsChanged&&(Q.activeTexture(Q.TEXTURE3),Q.bindTexture(Q.TEXTURE_2D,f),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_WRAP_S,Q.CLAMP_TO_EDGE),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_WRAP_T,Q.CLAMP_TO_EDGE),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_MIN_FILTER,Q.NEAREST),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_MAG_FILTER,Q.NEAREST),Q.texImage2D(Q.TEXTURE_2D,0,Q.RGBA32F,this.renderData.colorTransformsWidth,this.renderData.colorTransformsHeight,0,Q.RGBA,Q.FLOAT,this.renderData.colorTransforms),Q.activeTexture(Q.TEXTURE4),Q.bindTexture(Q.TEXTURE_2D,D),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_WRAP_S,Q.CLAMP_TO_EDGE),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_WRAP_T,Q.CLAMP_TO_EDGE),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_MIN_FILTER,Q.NEAREST),Q.texParameteri(Q.TEXTURE_2D,Q.TEXTURE_MAG_FILTER,Q.NEAREST),Q.texImage2D(Q.TEXTURE_2D,0,Q.R32UI,this.renderData.colorTransformIndicesWidth,this.renderData.colorTransformIndicesHeight,0,Q.RED_INTEGER,Q.UNSIGNED_INT,this.renderData.colorTransformIndices));const Z=new Float32Array(this.renderData.positions.slice().buffer),p=new Float32Array(this.renderData.transforms.slice().buffer),P=new Uint32Array(this.renderData.transformIndices.slice().buffer);this._worker?.postMessage({sortData:{positions:Z,transforms:p,transformIndices:P,vertexCount:this.renderData.vertexCount}},[Z.buffer,p.buffer,P.buffer]),this.renderData.dataChanged=!1,this.renderData.transformsChanged=!1,this.renderData.colorTransformsChanged=!1}this._camera.update(),this._worker?.postMessage({viewProj:this._camera.data.viewProj.buffer}),Q.viewport(0,0,A.width,A.height),Q.clearColor(0,0,0,0),Q.clear(Q.COLOR_BUFFER_BIT),Q.disable(Q.DEPTH_TEST),Q.enable(Q.BLEND),Q.blendFuncSeparate(Q.ONE_MINUS_DST_ALPHA,Q.ONE,Q.ONE_MINUS_DST_ALPHA,Q.ONE),Q.blendEquationSeparate(Q.FUNC_ADD,Q.FUNC_ADD),Q.uniformMatrix4fv(s,!1,this._camera.data.projectionMatrix.buffer),Q.uniformMatrix4fv(F,!1,this._camera.data.viewMatrix.buffer),Q.bindBuffer(Q.ARRAY_BUFFER,y),Q.vertexAttribPointer(g,2,Q.FLOAT,!1,0,0),Q.bindBuffer(Q.ARRAY_BUFFER,N),Q.bufferData(Q.ARRAY_BUFFER,this.depthIndex,Q.STATIC_DRAW),Q.vertexAttribIPointer(R,1,Q.INT,0,0),Q.vertexAttribDivisor(R,1),Q.drawArraysInstanced(Q.TRIANGLE_FAN,0,4,this.depthIndex.length)},this._dispose=()=>{if(!this._scene||!this._camera||!this.renderData){console.error(\"Cannot dispose without scene and camera\");return}this._scene.removeEventListener(\"objectAdded\",V),this._scene.removeEventListener(\"objectRemoved\",H);for(const Z of this._scene.objects)Z instanceof _&&Z.removeEventListener(\"objectChanged\",M);this._worker?.terminate(),this.renderData.dispose(),Q.deleteTexture(this.splatTexture),Q.deleteTexture(c),Q.deleteTexture(u),Q.deleteBuffer(N),Q.deleteBuffer(y)},this._setOutlineThickness=Z=>{this._outlineThickness=Z,this._initialized&&Q.uniform1f(I,Z)},this._setOutlineColor=Z=>{this._outlineColor=Z,this._initialized&&Q.uniform4fv(l,new Float32Array(Z.flatNorm()))}}get renderData(){return this._renderData}get depthIndex(){return this._depthIndex}get splatTexture(){return this._splatTexture}get outlineThickness(){return this._outlineThickness}set outlineThickness(t){this._setOutlineThickness(t)}get outlineColor(){return this._outlineColor}set outlineColor(t){this._setOutlineColor(t)}get worker(){return this._worker}_getVertexSource(){return kt}_getFragmentSource(){return yt}}class wt{constructor(t=1){let e=0,A=!1,Q,s,n,U;this.initialize=F=>{if(!(F instanceof gt))throw new Error(\"FadeInPass requires a RenderProgram\");e=F.started?1:0,A=!0,Q=F,s=F.renderer.gl,n=s.getUniformLocation(Q.program,\"useDepthFade\"),s.uniform1i(n,1),U=s.getUniformLocation(Q.program,\"depthFade\"),s.uniform1f(U,e)},this.render=()=>{!A||Q.renderData?.updating||(s.useProgram(Q.program),e=Math.min(e+t*.01,1),e>=1&&(A=!1,s.uniform1i(n,0)),s.uniform1f(U,e))}}dispose(){}}class ft{constructor(t=null,e=null){this._backgroundColor=new rt;const A=t||document.createElement(\"canvas\");t||(A.style.display=\"block\",A.style.boxSizing=\"border-box\",A.style.width=\"100%\",A.style.height=\"100%\",A.style.margin=\"0\",A.style.padding=\"0\",document.body.appendChild(A)),A.style.background=this._backgroundColor.toHexString(),this._canvas=A,this._gl=A.getContext(\"webgl2\",{antialias:!1});const Q=e||[];e||Q.push(new wt),this._renderProgram=new gt(this,Q);const s=[this._renderProgram];this.resize=()=>{const n=A.clientWidth,U=A.clientHeight;(A.width!==n||A.height!==U)&&this.setSize(n,U)},this.setSize=(n,U)=>{A.width=n,A.height=U,this._gl.viewport(0,0,A.width,A.height);for(const F of s)F.resize()},this.render=(n,U)=>{for(const F of s)F.render(n,U)},this.dispose=()=>{for(const n of s)n.dispose()},this.addProgram=n=>{s.push(n)},this.removeProgram=n=>{const U=s.indexOf(n);if(U<0)throw new Error(\"Program not found\");s.splice(U,1)},this.resize()}get canvas(){return this._canvas}get gl(){return this._gl}get renderProgram(){return this._renderProgram}get backgroundColor(){return this._backgroundColor}set backgroundColor(t){this._backgroundColor=t,this._canvas.style.background=t.toHexString()}}class Tt{constructor(t,e,A=.5,Q=.5,s=5,n=!0,U=new h){this.minAngle=-90,this.maxAngle=90,this.minZoom=.1,this.maxZoom=30,this.orbitSpeed=1,this.panSpeed=1,this.zoomSpeed=1,this.dampening=.12,this.setCameraTarget=()=>{};let F=U.clone(),i=F.clone(),d=A,C=Q,B=s,r=!1,I=!1,l=0,g=0,R=0;const c={};let u=!1;const f=()=>{if(u)return;const o=t.rotation.toEuler();d=-o.y,C=-o.x;const S=t.position.x-B*Math.sin(d)*Math.cos(C),W=t.position.y+B*Math.sin(C),b=t.position.z+B*Math.cos(d)*Math.cos(C);i=new h(S,W,b)};t.addEventListener(\"objectChanged\",f),this.setCameraTarget=o=>{const S=o.x-t.position.x,W=o.y-t.position.y,b=o.z-t.position.z;B=Math.sqrt(S*S+W*W+b*b),C=Math.atan2(W,Math.sqrt(S*S+b*b)),d=-Math.atan2(S,b),i=new h(o.x,o.y,o.z)};const D=()=>.1+.9*(B-this.minZoom)/(this.maxZoom-this.minZoom),y=o=>{c[o.code]=!0,o.code===\"ArrowUp\"&&(c.KeyW=!0),o.code===\"ArrowDown\"&&(c.KeyS=!0),o.code===\"ArrowLeft\"&&(c.KeyA=!0),o.code===\"ArrowRight\"&&(c.KeyD=!0)},N=o=>{c[o.code]=!1,o.code===\"ArrowUp\"&&(c.KeyW=!1),o.code===\"ArrowDown\"&&(c.KeyS=!1),o.code===\"ArrowLeft\"&&(c.KeyA=!1),o.code===\"ArrowRight\"&&(c.KeyD=!1)},w=o=>{T(o),r=!0,I=o.button===2,g=o.clientX,R=o.clientY,window.addEventListener(\"mouseup\",V)},V=o=>{T(o),r=!1,I=!1,window.removeEventListener(\"mouseup\",V)},H=o=>{if(T(o),!r||!t)return;const S=o.clientX-g,W=o.clientY-R;if(I){const b=D(),z=-S*this.panSpeed*.01*b,q=-W*this.panSpeed*.01*b,L=j.RotationFromQuaternion(t.rotation).buffer,a=new h(L[0],L[3],L[6]),J=new h(L[1],L[4],L[7]);i=i.add(a.multiply(z)),i=i.add(J.multiply(q))}else d-=S*this.orbitSpeed*.003,C+=W*this.orbitSpeed*.003,C=Math.min(Math.max(C,this.minAngle*Math.PI/180),this.maxAngle*Math.PI/180);g=o.clientX,R=o.clientY},M=o=>{T(o);const S=D();B+=o.deltaY*this.zoomSpeed*.025*S,B=Math.min(Math.max(B,this.minZoom),this.maxZoom)},x=o=>{if(T(o),o.touches.length===1)r=!0,I=!1,g=o.touches[0].clientX,R=o.touches[0].clientY,l=0;else if(o.touches.length===2){r=!0,I=!0,g=(o.touches[0].clientX+o.touches[1].clientX)/2,R=(o.touches[0].clientY+o.touches[1].clientY)/2;const S=o.touches[0].clientX-o.touches[1].clientX,W=o.touches[0].clientY-o.touches[1].clientY;l=Math.sqrt(S*S+W*W)}},Z=o=>{T(o),r=!1,I=!1},p=o=>{if(T(o),!(!r||!t))if(I){const S=D(),W=o.touches[0].clientX-o.touches[1].clientX,b=o.touches[0].clientY-o.touches[1].clientY,z=Math.sqrt(W*W+b*b),q=l-z;B+=q*this.zoomSpeed*.1*S,B=Math.min(Math.max(B,this.minZoom),this.maxZoom),l=z;const L=(o.touches[0].clientX+o.touches[1].clientX)/2,a=(o.touches[0].clientY+o.touches[1].clientY)/2,J=L-g,G=a-R,m=j.RotationFromQuaternion(t.rotation).buffer,Y=new h(m[0],m[3],m[6]),O=new h(m[1],m[4],m[7]);i=i.add(Y.multiply(-J*this.panSpeed*.025*S)),i=i.add(O.multiply(-G*this.panSpeed*.025*S)),g=L,R=a}else{const S=o.touches[0].clientX-g,W=o.touches[0].clientY-R;d-=S*this.orbitSpeed*.003,C+=W*this.orbitSpeed*.003,C=Math.min(Math.max(C,this.minAngle*Math.PI/180),this.maxAngle*Math.PI/180),g=o.touches[0].clientX,R=o.touches[0].clientY}},P=(o,S,W)=>(1-W)*o+W*S;this.update=()=>{u=!0,A=P(A,d,this.dampening),Q=P(Q,C,this.dampening),s=P(s,B,this.dampening),F=F.lerp(i,this.dampening);const o=F.x+s*Math.sin(A)*Math.cos(Q),S=F.y-s*Math.sin(Q),W=F.z-s*Math.cos(A)*Math.cos(Q);t.position=new h(o,S,W);const b=F.subtract(t.position).normalize(),z=Math.asin(-b.y),q=Math.atan2(b.x,b.z);t.rotation=k.FromEuler(new h(z,q,0));const L=.025,a=.01,J=j.RotationFromQuaternion(t.rotation).buffer,G=new h(-J[2],-J[5],-J[8]),m=new h(J[0],J[3],J[6]);c.KeyS&&(i=i.add(G.multiply(L))),c.KeyW&&(i=i.subtract(G.multiply(L))),c.KeyA&&(i=i.subtract(m.multiply(L))),c.KeyD&&(i=i.add(m.multiply(L))),c.KeyE&&(d+=a),c.KeyQ&&(d-=a),c.KeyR&&(C+=a),c.KeyF&&(C-=a),u=!1};const T=o=>{o.preventDefault(),o.stopPropagation()};this.dispose=()=>{e.removeEventListener(\"dragenter\",T),e.removeEventListener(\"dragover\",T),e.removeEventListener(\"dragleave\",T),e.removeEventListener(\"contextmenu\",T),e.removeEventListener(\"mousedown\",w),e.removeEventListener(\"mousemove\",H),e.removeEventListener(\"wheel\",M),e.removeEventListener(\"touchstart\",x),e.removeEventListener(\"touchend\",Z),e.removeEventListener(\"touchmove\",p),n&&(window.removeEventListener(\"keydown\",y),window.removeEventListener(\"keyup\",N))},n&&(window.addEventListener(\"keydown\",y),window.addEventListener(\"keyup\",N)),e.addEventListener(\"dragenter\",T),e.addEventListener(\"dragover\",T),e.addEventListener(\"dragleave\",T),e.addEventListener(\"contextmenu\",T),e.addEventListener(\"mousedown\",w),e.addEventListener(\"mousemove\",H),e.addEventListener(\"wheel\",M),e.addEventListener(\"touchstart\",x),e.addEventListener(\"touchend\",Z),e.addEventListener(\"touchmove\",p),this.update()}}const xt=at((E,t,e,A)=>{let Q,{value:s}=t,{zoom_speed:n}=t,{pan_speed:U}=t,F,i,d,C=null,B,r=null;function I(){if(r!==null&&(cancelAnimationFrame(r),r=null),C!==null&&(C.dispose(),C=null),i=new Et,d=new ct,C=new ft(F),B=new Tt(d,F),B.zoomSpeed=n,B.panSpeed=U,!s)return;let l=!1;const g=async()=>{if(l){console.error(\"Already loading\");return}if(!Q)throw new Error(\"No resolved URL\");if(l=!0,Q.endsWith(\".ply\"))await Jt.LoadAsync(Q,i,void 0);else if(Q.endsWith(\".splat\"))await St.LoadAsync(Q,i,void 0);else throw new Error(\"Unsupported file type\");l=!1},R=()=>{if(C){if(l){r=requestAnimationFrame(R);return}B.update(),C.render(i,d),r=requestAnimationFrame(R)}};g(),r=requestAnimationFrame(R)}return It(()=>(s!=null&&I(),()=>{C&&C.dispose()})),t.value===void 0&&e.value&&s!==void 0&&e.value(s),t.zoom_speed===void 0&&e.zoom_speed&&n!==void 0&&e.zoom_speed(n),t.pan_speed===void 0&&e.pan_speed&&U!==void 0&&e.pan_speed(U),Q=s.url,`<canvas${Ct(\"this\",F,0)}></canvas>`});export{xt as default};\n//# sourceMappingURL=Canvas3DGS.js.map\n"],"names":["at","Ct"],"mappings":";;AAA8G,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAM,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,CA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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,OAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,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"}