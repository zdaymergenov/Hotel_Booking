import { t as tick } from './Component-NmRBwSfF.js';
import { c as create_ssr_component, v as validate_component, b as createEventDispatcher, e as escape, d as add_attribute, f as each } from './ssr-C3HYbsxA.js';
import { I as It, E as Et, U as Ue, O, z as Yt, N as yt, ah as he, t as fe, ai as ue } from './2-CzxFoJuL.js';
import { BaseDropdown as $ } from './Index59-Dwt5XrDT.js';
export { default as BaseExample } from './Example13-DKMNurZL.js';
import './index-ClteBeTX.js';
import 'path';
import 'url';
import 'fs';
import './Example14-Dm_QueAJ.js';

const lt={code:'.s--slider.svelte-1wr5wa.svelte-1wr5wa{display:flex;align-items:center}.s--slider.svelte-1wr5wa button.svelte-1wr5wa{width:3em;height:1.6em;position:relative;margin:0 0.5em 0 0;background:var(--button-secondary-background-fill);border:none}.s--slider.svelte-1wr5wa button[disabled].svelte-1wr5wa{cursor:not-allowed}.s--slider.svelte-1wr5wa button.svelte-1wr5wa::before{content:"";position:absolute;width:1.3em;height:1.3em;background:#fff;top:0.13em;right:1.5em;transition:transform 0.3s}.s--slider.svelte-1wr5wa button[aria-checked="true"].svelte-1wr5wa{background-color:var(--color-accent)}.s--slider.svelte-1wr5wa button[aria-checked="true"].svelte-1wr5wa::before{transform:translateX(1.3em);transition:transform 0.3s}.s--slider.svelte-1wr5wa button.svelte-1wr5wa:focus{box-shadow:0 0px 0px 1px var(--color-accent)}.s--slider.svelte-1wr5wa button.svelte-1wr5wa{border-radius:1.5em}.s--slider.svelte-1wr5wa button.svelte-1wr5wa::before{border-radius:100%}.s--slider.svelte-1wr5wa button.svelte-1wr5wa:focus{box-shadow:0 0px 8px var(--accent-color);border-radius:1.5em}',map:'{"version":3,"file":"Switch.svelte","sources":["Switch.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { createEventDispatcher } from \\"svelte\\";\\nexport let label;\\nexport let checked = false;\\nexport let disabled = false;\\nconst dispatch = createEventDispatcher();\\nfunction handleClick(event) {\\n    const target = event.target;\\n    const state = target.getAttribute(\\"aria-checked\\");\\n    checked = state === \\"true\\" ? false : true;\\n    dispatch(\\"click\\", { checked });\\n}\\n<\/script>\\n\\n<div class=\\"s s--slider\\" style=\\"font-size:var(--font-size-sm)px\\">\\n\\t<button\\n\\t\\trole=\\"switch\\"\\n\\t\\taria-checked={checked}\\n\\t\\ton:click={handleClick}\\n\\t\\t{disabled}\\n\\t>\\n\\t</button>\\n\\t<span>{label}</span>\\n</div>\\n\\n<style>\\n\\t.s--slider {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t}\\n\\n\\t.s--slider button {\\n\\t\\twidth: 3em;\\n\\t\\theight: 1.6em;\\n\\t\\tposition: relative;\\n\\t\\tmargin: 0 0.5em 0 0;\\n\\t\\tbackground: var(--button-secondary-background-fill);\\n\\t\\tborder: none;\\n\\t}\\n\\n\\t.s--slider button[disabled] {\\n\\t\\tcursor: not-allowed;\\n\\t}\\n\\n\\t.s--slider button::before {\\n\\t\\tcontent: \\"\\";\\n\\t\\tposition: absolute;\\n\\t\\twidth: 1.3em;\\n\\t\\theight: 1.3em;\\n\\t\\tbackground: #fff;\\n\\t\\ttop: 0.13em;\\n\\t\\tright: 1.5em;\\n\\t\\ttransition: transform 0.3s;\\n\\t}\\n\\n\\t.s--slider button[aria-checked=\\"true\\"] {\\n\\t\\tbackground-color: var(--color-accent);\\n\\t}\\n\\n\\t.s--slider button[aria-checked=\\"true\\"]::before {\\n\\t\\ttransform: translateX(1.3em);\\n\\t\\ttransition: transform 0.3s;\\n\\t}\\n\\n\\t.s--slider button:focus {\\n\\t\\tbox-shadow: 0 0px 0px 1px var(--color-accent);\\n\\t}\\n\\n\\t/* Slider Design Option */\\n\\t.s--slider button {\\n\\t\\tborder-radius: 1.5em;\\n\\t}\\n\\n\\t.s--slider button::before {\\n\\t\\tborder-radius: 100%;\\n\\t}\\n\\n\\t.s--slider button:focus {\\n\\t\\tbox-shadow: 0 0px 8px var(--accent-color);\\n\\t\\tborder-radius: 1.5em;\\n\\t}</style>\\n"],"names":[],"mappings":"AAyBC,sCAAW,CACV,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MACd,CAEA,wBAAU,CAAC,oBAAO,CACjB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACnB,UAAU,CAAE,IAAI,kCAAkC,CAAC,CACnD,MAAM,CAAE,IACT,CAEA,wBAAU,CAAC,MAAM,CAAC,QAAQ,eAAE,CAC3B,MAAM,CAAE,WACT,CAEA,wBAAU,CAAC,oBAAM,QAAS,CACzB,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,IAAI,CAChB,GAAG,CAAE,MAAM,CACX,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,SAAS,CAAC,IACvB,CAEA,wBAAU,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,eAAE,CACtC,gBAAgB,CAAE,IAAI,cAAc,CACrC,CAEA,wBAAU,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,eAAC,QAAS,CAC9C,SAAS,CAAE,WAAW,KAAK,CAAC,CAC5B,UAAU,CAAE,SAAS,CAAC,IACvB,CAEA,wBAAU,CAAC,oBAAM,MAAO,CACvB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,cAAc,CAC7C,CAGA,wBAAU,CAAC,oBAAO,CACjB,aAAa,CAAE,KAChB,CAEA,wBAAU,CAAC,oBAAM,QAAS,CACzB,aAAa,CAAE,IAChB,CAEA,wBAAU,CAAC,oBAAM,MAAO,CACvB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,cAAc,CAAC,CACzC,aAAa,CAAE,KAChB"}'},rt=create_ssr_component((o,t,e,z)=>{let{label:a}=t,{checked:d=!1}=t,{disabled:n=!1}=t;return createEventDispatcher(),t.label===void 0&&e.label&&a!==void 0&&e.label(a),t.checked===void 0&&e.checked&&d!==void 0&&e.checked(d),t.disabled===void 0&&e.disabled&&n!==void 0&&e.disabled(n),o.css.add(lt),`<div class="s s--slider svelte-1wr5wa" style="font-size:var(--font-size-sm)px"><button role="switch"${add_attribute("aria-checked",d,0)} ${n?"disabled":""} class="svelte-1wr5wa"></button> <span>${escape(a)}</span> </div>`}),st={code:'label.svelte-1de6p8m.svelte-1de6p8m{display:block;width:100%}.input-container.svelte-1de6p8m.svelte-1de6p8m{display:flex;position:relative;align-items:flex-end}.dialogue-container.svelte-1de6p8m.svelte-1de6p8m{border:none;border-radius:var(--input-radius);background:var(--input-background-fill);padding:var(--spacing-md);margin-bottom:var(--spacing-sm);position:relative}.dialogue-line.svelte-1de6p8m.svelte-1de6p8m{display:flex;align-items:center;margin-bottom:var(--spacing-sm)}.dialogue-line.svelte-1de6p8m:has(.action-column.hidden) .text-column.svelte-1de6p8m{margin-right:0}.speaker-column.svelte-1de6p8m.svelte-1de6p8m{flex:0 0 150px;margin-right:var(--spacing-sm);display:flex;align-items:center}.speaker-column.svelte-1de6p8m textarea.svelte-1de6p8m{background:var(--speaker-bg-color);transition:background-color 0.2s ease;border:1px solid var(--border-color-primary);border-radius:var(--radius-sm);padding:var(--input-padding);color:var(--body-text-color);font-weight:var(--input-text-weight);font-size:var(--input-text-size);line-height:var(--line-sm);resize:none;width:100%;box-sizing:border-box;height:auto;min-height:30px;max-height:none;margin-top:0px;margin-bottom:0px;z-index:1;display:block;position:relative;white-space:pre-wrap;word-wrap:break-word;overflow-wrap:break-word;overflow:hidden}.text-column.svelte-1de6p8m.svelte-1de6p8m{flex:1;margin-right:var(--spacing-sm)}.text-column.svelte-1de6p8m textarea.svelte-1de6p8m{width:100%;padding:var(--spacing-sm);border:1px solid var(--border-color-primary);border-radius:var(--radius-sm);color:var(--body-text-color);background:var(--speaker-bg-color);transition:background-color 0.2s ease;height:auto;min-height:30px;max-height:none;flex-grow:1;margin-top:0px;margin-bottom:0px;resize:none;z-index:1;display:block;position:relative;padding:var(--input-padding);width:100%;color:var(--body-text-color);font-weight:var(--input-text-weight);font-size:var(--input-text-size);line-height:var(--line-sm);white-space:pre-wrap;word-wrap:break-word;overflow-wrap:break-word;overflow:hidden;box-sizing:border-box}.text-column.svelte-1de6p8m textarea.svelte-1de6p8m{color:var(--body-text-color)}.dialogue-line[style*="--speaker-bg-color: rgba"].svelte-1de6p8m .text-column textarea.svelte-1de6p8m,.dialogue-line[style*="--speaker-bg-color: rgba"].svelte-1de6p8m .speaker-column textarea.svelte-1de6p8m{color:black}textarea.svelte-1de6p8m.svelte-1de6p8m{flex-grow:1;outline:none !important;margin-top:0px;margin-bottom:0px;resize:none;z-index:1;display:block;position:relative;outline:none !important;background:var(--input-background-fill);padding:var(--input-padding);width:100%;color:var(--body-text-color);font-weight:var(--input-text-weight);font-size:var(--input-text-size);line-height:var(--line-sm);box-shadow:var(--input-shadow);border:var(--input-border-width) solid var(--input-border-color);border-radius:var(--input-radius)}textarea.svelte-1de6p8m.svelte-1de6p8m:disabled{-webkit-opacity:1;opacity:1}textarea.svelte-1de6p8m.svelte-1de6p8m:focus{box-shadow:var(--input-shadow-focus);border-color:var(--input-border-color-focus);background:var(--input-background-fill-focus)}textarea.svelte-1de6p8m.svelte-1de6p8m::placeholder{color:var(--input-placeholder-color)}.action-column.svelte-1de6p8m.svelte-1de6p8m{display:flex;justify-content:center}.add-button.svelte-1de6p8m.svelte-1de6p8m{display:flex;justify-content:center;align-items:center;width:25px;height:25px;border:none;background:transparent;cursor:pointer}.delete-button.svelte-1de6p8m.svelte-1de6p8m{display:flex;justify-content:center;align-items:center;width:15px;height:15px}.add-button.svelte-1de6p8m.svelte-1de6p8m:hover{color:var(--color-accent)}.switch-container.svelte-1de6p8m.svelte-1de6p8m{display:flex;justify-content:flex-start;transition:opacity 0.2s ease-in-out}.switch-container.switch-disabled.svelte-1de6p8m.svelte-1de6p8m{opacity:0.6;pointer-events:none}.switch-container.top-switch.svelte-1de6p8m.svelte-1de6p8m{margin-bottom:var(--spacing-sm);justify-content:flex-end}.submit-container.svelte-1de6p8m.svelte-1de6p8m{display:flex;justify-content:flex-end;margin-top:var(--spacing-sm)}.submit-container.svelte-1de6p8m button[disabled].svelte-1de6p8m{cursor:not-allowed}.submit-button.svelte-1de6p8m.svelte-1de6p8m{border:none;text-align:center;text-decoration:none;font-size:14px;cursor:pointer;border-radius:15px;min-width:30px;height:30px;flex-shrink:0;display:flex;justify-content:center;align-items:center;background:var(--button-secondary-background-fill);color:var(--button-secondary-text-color)}.submit-button.svelte-1de6p8m.svelte-1de6p8m:hover{background:var(--button-secondary-background-fill-hover)}.submit-button.svelte-1de6p8m.svelte-1de6p8m:active{box-shadow:var(--button-shadow-active)}.submit-button.svelte-1de6p8m svg{height:22px;width:22px}.tag-menu.svelte-1de6p8m.svelte-1de6p8m{position:absolute;width:100%;top:100%;left:0}.tag-menu-plain-text.svelte-1de6p8m.svelte-1de6p8m{position:relative;width:100%}.tag-menu-plain-text.svelte-1de6p8m .options{position:static !important;width:100% !important;max-height:none !important;top:auto !important;bottom:auto !important}.hidden.svelte-1de6p8m.svelte-1de6p8m{display:none}.loading-overlay.svelte-1de6p8m.svelte-1de6p8m{position:absolute;top:0;left:0;right:0;bottom:0;background:var(--input-background-fill);opacity:0.95;backdrop-filter:blur(2px);display:flex;flex-direction:column;align-items:center;justify-content:center;z-index:10;border-radius:var(--input-radius)}.loading-spinner.svelte-1de6p8m.svelte-1de6p8m{width:24px;height:24px;border:2px solid var(--border-color-primary);border-top:2px solid var(--color-accent);border-radius:50%;animation:svelte-1de6p8m-spin 1s linear infinite;margin-bottom:var(--spacing-sm)}@keyframes svelte-1de6p8m-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.loading-text.svelte-1de6p8m.svelte-1de6p8m{color:var(--body-text-color);font-size:var(--text-sm);font-weight:500;opacity:0.8}.dialogue-container.loading.svelte-1de6p8m.svelte-1de6p8m,.textarea-container.loading.svelte-1de6p8m.svelte-1de6p8m{position:relative;opacity:0.7;transition:opacity 0.3s ease-in-out}.dialogue-container.svelte-1de6p8m.svelte-1de6p8m,.textarea-container.svelte-1de6p8m.svelte-1de6p8m{transition:opacity 0.3s ease-in-out}',map:'{"version":3,"file":"Dialogue.svelte","sources":["Dialogue.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { createEventDispatcher, tick, onMount } from \\"svelte\\";\\nimport { BlockTitle, IconButton, IconButtonWrapper } from \\"@gradio/atoms\\";\\nimport { Copy, Check, Send, Plus, Trash } from \\"@gradio/icons\\";\\nimport { fade } from \\"svelte/transition\\";\\nimport { BaseDropdown, BaseDropdownOptions } from \\"@gradio/dropdown\\";\\nimport Switch from \\"./Switch.svelte\\";\\nexport let speakers = [];\\nexport let tags = [];\\nexport let value = [];\\nexport let value_is_output = false;\\nexport let placeholder = void 0;\\nexport let label;\\nexport let info = void 0;\\nexport let disabled = false;\\nexport let show_label = true;\\nexport let container = true;\\nexport let max_lines = void 0;\\nexport let show_copy_button = false;\\nexport let show_submit_button = true;\\nexport let color_map = null;\\nexport let ui_mode = \\"both\\";\\nlet checked = ui_mode === \\"text\\";\\nexport let server;\\nlet dialogue_lines = [];\\nif (value && value.length && typeof value !== \\"string\\") {\\n    dialogue_lines = [...value];\\n}\\nelse if (value && typeof value !== \\"string\\") {\\n    dialogue_lines = [\\n        { speaker: `${speakers.length ? speakers[0] : \\"\\"}`, text: \\"\\" }\\n    ];\\n}\\nlet dialogue_container_element;\\nlet showTagMenu = false;\\nlet currentLineIndex = -1;\\nlet selectedOptionIndex = 0;\\nlet filtered_tags = [];\\nlet input_elements = [];\\nlet textarea_element;\\nlet old_value = JSON.stringify(value);\\nlet offset_from_top = 0;\\nlet copied = false;\\nlet timer;\\nlet textbox_value = \\"\\";\\nlet hoveredSpeaker = null;\\nlet is_unformatting = false;\\nlet is_formatting = false;\\nlet is_internal_update = false;\\nconst defaultColorNames = [\\n    \\"red\\",\\n    \\"green\\",\\n    \\"blue\\",\\n    \\"yellow\\",\\n    \\"purple\\",\\n    \\"teal\\",\\n    \\"orange\\",\\n    \\"cyan\\",\\n    \\"lime\\",\\n    \\"pink\\"\\n];\\nconst colorNameToHex = {\\n    red: \\"rgba(254, 202, 202, 0.7)\\",\\n    green: \\"rgba(209, 250, 229, 0.7)\\",\\n    blue: \\"rgba(219, 234, 254, 0.7)\\",\\n    yellow: \\"rgba(254, 243, 199, 0.7)\\",\\n    purple: \\"rgba(233, 213, 255, 0.7)\\",\\n    teal: \\"rgba(204, 251, 241, 0.7)\\",\\n    orange: \\"rgba(254, 215, 170, 0.7)\\",\\n    cyan: \\"rgba(207, 250, 254, 0.7)\\",\\n    lime: \\"rgba(217, 249, 157, 0.7)\\",\\n    pink: \\"rgba(252, 231, 243, 0.7)\\"\\n};\\nlet speakerColors = {};\\n$: {\\n    if (color_map) {\\n        speakerColors = { ...color_map };\\n    }\\n    else {\\n        speakerColors = {};\\n        speakers.forEach((speaker, index) => {\\n            const colorName = defaultColorNames[index % defaultColorNames.length];\\n            speakerColors[speaker] = colorNameToHex[colorName];\\n        });\\n    }\\n}\\nif (speakers.length === 0) {\\n    checked = true;\\n    value = \\"\\";\\n}\\n$: {\\n    if (dialogue_lines.length > input_elements.length) {\\n        input_elements = [\\n            ...input_elements,\\n            ...Array(dialogue_lines.length - input_elements.length).fill(null)\\n        ];\\n    }\\n    else if (dialogue_lines.length < input_elements.length) {\\n        input_elements = input_elements.slice(0, dialogue_lines.length);\\n    }\\n    tick().then(() => {\\n        input_elements.forEach((element) => {\\n            if (element && element instanceof HTMLTextAreaElement) {\\n                element.style.height = \\"auto\\";\\n                element.style.height = element.scrollHeight + \\"px\\";\\n            }\\n        });\\n    });\\n}\\nfunction add_line(index) {\\n    const newSpeaker = speakers.length > 0 ? speakers[0] : \\"\\";\\n    dialogue_lines = [\\n        ...dialogue_lines.slice(0, index + 1),\\n        { speaker: newSpeaker, text: \\"\\" },\\n        ...dialogue_lines.slice(index + 1)\\n    ];\\n    tick().then(() => {\\n        if (input_elements[index + 1]) {\\n            input_elements[index + 1].focus();\\n        }\\n    });\\n}\\nfunction delete_line(index) {\\n    dialogue_lines = [\\n        ...dialogue_lines.slice(0, index),\\n        ...dialogue_lines.slice(index + 1)\\n    ];\\n}\\nfunction update_line(index, key, value2) {\\n    dialogue_lines[index][key] = value2;\\n    dialogue_lines = [...dialogue_lines];\\n}\\nfunction handle_input(event, index) {\\n    const input = event.target || HTMLTextAreaElement;\\n    if (input && !input_elements[index]) {\\n        input_elements[index] = input;\\n    }\\n    const cursor_position = input.selectionStart || 0;\\n    const text = input.value;\\n    let show_menu = false;\\n    let position_reference_index = -1;\\n    if (text[cursor_position - 1] === \\":\\") {\\n        currentLineIndex = index;\\n        position_reference_index = cursor_position;\\n        const search_text = get_tag_search_text(text, cursor_position);\\n        filtered_tags = tags.filter((tag) => search_text === \\"\\" || tag.toLowerCase().includes(search_text.toLowerCase()));\\n        show_menu = filtered_tags.length > 0;\\n        selectedOptionIndex = 0;\\n    }\\n    else {\\n        const lastColonIndex = text.lastIndexOf(\\":\\", cursor_position - 1);\\n        if (lastColonIndex >= 0 && !text.substring(lastColonIndex + 1, cursor_position).includes(\\" \\")) {\\n            currentLineIndex = index;\\n            position_reference_index = lastColonIndex + 1;\\n            const searchText = text.substring(lastColonIndex + 1, cursor_position);\\n            filtered_tags = tags.filter((tag) => searchText === \\"\\" || tag.toLowerCase().includes(searchText.toLowerCase()));\\n            show_menu = filtered_tags.length > 0;\\n            selectedOptionIndex = 0;\\n        }\\n    }\\n    if (show_menu && position_reference_index !== -1) {\\n        showTagMenu = true;\\n        const input_rect = input.getBoundingClientRect();\\n        if (dialogue_container_element) {\\n            const container_rect = dialogue_container_element.getBoundingClientRect();\\n            offset_from_top = container_rect.top + input_rect.height * (index + 1.5);\\n        }\\n    }\\n    else {\\n        showTagMenu = false;\\n    }\\n}\\nfunction get_tag_search_text(text, cursorPosition) {\\n    const lastColonIndex = text.lastIndexOf(\\":\\", cursorPosition - 1);\\n    if (lastColonIndex >= 0) {\\n        return text.substring(lastColonIndex + 1, cursorPosition);\\n    }\\n    return \\"\\";\\n}\\nasync function insert_selected_tag() {\\n    const tag = filtered_tags[selectedOptionIndex];\\n    if (tag) {\\n        let text;\\n        let currentInput;\\n        if (checked) {\\n            currentInput = textarea_element;\\n            text = textbox_value;\\n        }\\n        else {\\n            currentInput = input_elements[currentLineIndex];\\n            text = dialogue_lines[currentLineIndex].text;\\n        }\\n        const cursorPosition = currentInput?.selectionStart || 0;\\n        const lastColonIndex = text.lastIndexOf(\\":\\", cursorPosition - 1);\\n        if (lastColonIndex >= 0) {\\n            const beforeColon = text.substring(0, lastColonIndex);\\n            const afterCursor = text.substring(cursorPosition);\\n            if (checked) {\\n                const newText = `${beforeColon}${tag} ${afterCursor}`;\\n                textbox_value = newText;\\n                if (speakers.length === 0) {\\n                    value = newText;\\n                }\\n                else {\\n                    value = await server.unformat({ text: newText });\\n                }\\n                tick().then(() => {\\n                    if (textarea_element) {\\n                        const newCursorPosition = beforeColon.length + tag.length + 1;\\n                        textarea_element.setSelectionRange(newCursorPosition, newCursorPosition);\\n                        textarea_element.focus();\\n                    }\\n                });\\n            }\\n            else {\\n                const filteredBeforeColon = beforeColon.replace(/\\\\[S\\\\d+\\\\]/g, \\"\\").trim();\\n                const newText = `${filteredBeforeColon}${tag} ${afterCursor}`;\\n                update_line(currentLineIndex, \\"text\\", newText);\\n                tick().then(() => {\\n                    const updatedInput = input_elements[currentLineIndex];\\n                    if (updatedInput) {\\n                        const newCursorPosition = filteredBeforeColon.length + tag.length + 1;\\n                        updatedInput.setSelectionRange(newCursorPosition, newCursorPosition);\\n                        updatedInput.focus();\\n                    }\\n                });\\n            }\\n        }\\n        showTagMenu = false;\\n        selectedOptionIndex = 0;\\n    }\\n}\\nasync function insert_tag(e) {\\n    const tag = tags[e.detail.target.dataset.index];\\n    if (tag) {\\n        let text;\\n        let currentInput;\\n        if (checked) {\\n            currentInput = textarea_element;\\n            text = textbox_value;\\n        }\\n        else {\\n            currentInput = input_elements[currentLineIndex];\\n            text = dialogue_lines[currentLineIndex].text;\\n        }\\n        const cursorPosition = currentInput?.selectionStart || 0;\\n        const lastColonIndex = text.lastIndexOf(\\":\\", cursorPosition - 1);\\n        if (lastColonIndex >= 0) {\\n            const beforeColon = text.substring(0, lastColonIndex);\\n            const afterCursor = text.substring(cursorPosition);\\n            if (checked) {\\n                const newText = `${beforeColon}${tag} ${afterCursor}`;\\n                textbox_value = newText;\\n                if (speakers.length === 0) {\\n                    value = newText;\\n                }\\n                else {\\n                    value = await server.unformat({ text: newText });\\n                }\\n                tick().then(() => {\\n                    if (textarea_element) {\\n                        const newCursorPosition = beforeColon.length + tag.length + 1;\\n                        textarea_element.setSelectionRange(newCursorPosition, newCursorPosition);\\n                        textarea_element.focus();\\n                    }\\n                });\\n            }\\n            else {\\n                const filteredBeforeColon = beforeColon.replace(/\\\\[S\\\\d+\\\\]/g, \\"\\").trim();\\n                const newText = `${filteredBeforeColon}${tag} ${afterCursor}`;\\n                update_line(currentLineIndex, \\"text\\", newText);\\n                tick().then(() => {\\n                    const updatedInput = input_elements[currentLineIndex];\\n                    if (updatedInput) {\\n                        const newCursorPosition = filteredBeforeColon.length + tag.length + 1;\\n                        updatedInput.setSelectionRange(newCursorPosition, newCursorPosition);\\n                        updatedInput.focus();\\n                    }\\n                });\\n            }\\n        }\\n        showTagMenu = false;\\n        selectedOptionIndex = 0;\\n    }\\n}\\nfunction handle_click_outside(event) {\\n    if (showTagMenu) {\\n        const target = event.target;\\n        const tagMenu = document.getElementById(\\"tag-menu\\");\\n        if (tagMenu && !tagMenu.contains(target)) {\\n            showTagMenu = false;\\n        }\\n    }\\n}\\nconst dispatch = createEventDispatcher();\\nfunction handle_change() {\\n    dispatch(\\"change\\", value);\\n    if (!value_is_output) {\\n        dispatch(\\"input\\");\\n    }\\n}\\nfunction sync_value(dialogueLines) {\\n    if (speakers.length !== 0) {\\n        is_internal_update = true;\\n        value = [...dialogueLines];\\n    }\\n}\\n$: sync_value(dialogue_lines);\\n$: if (JSON.stringify(value) !== old_value) {\\n    if (value == null) {\\n        dialogue_lines = [];\\n    }\\n    old_value = JSON.stringify(value);\\n    if (typeof value === \\"string\\") {\\n        textbox_value = value;\\n    }\\n    else if (typeof value === \\"object\\" && Array.isArray(value)) {\\n        dialogue_lines = [...value];\\n        if (!is_internal_update || checked) {\\n            value_to_string(dialogue_lines).then((result) => {\\n                textbox_value = result;\\n            });\\n        }\\n    }\\n    is_internal_update = false;\\n    handle_change();\\n}\\nasync function value_to_string(value2) {\\n    if (typeof value2 === \\"string\\") {\\n        return value2;\\n    }\\n    return await server.format(value2);\\n}\\nasync function handle_copy() {\\n    if (\\"clipboard\\" in navigator) {\\n        const text = await value_to_string(value);\\n        await navigator.clipboard.writeText(text);\\n        dispatch(\\"copy\\", { value: text });\\n        copy_feedback();\\n    }\\n}\\nfunction copy_feedback() {\\n    copied = true;\\n    if (timer)\\n        clearTimeout(timer);\\n    timer = setTimeout(() => {\\n        copied = false;\\n    }, 1e3);\\n}\\nasync function handle_submit() {\\n    if (checked) {\\n        value = await server.unformat({ text: textbox_value });\\n    }\\n    dispatch(\\"submit\\");\\n}\\nonMount(async () => {\\n    if (typeof value === \\"string\\") {\\n        textbox_value = value;\\n    }\\n    else if (value && value.length > 0) {\\n        const formatted = await value_to_string(value);\\n        textbox_value = formatted;\\n    }\\n    else {\\n        textbox_value = \\"\\";\\n    }\\n});\\n<\/script>\\n\\n<svelte:window on:click={handle_click_outside} />\\n\\n<label class:container>\\n\\t{#if show_label && show_copy_button}\\n\\t\\t<IconButtonWrapper>\\n\\t\\t\\t<IconButton\\n\\t\\t\\t\\tIcon={copied ? Check : Copy}\\n\\t\\t\\t\\ton:click={handle_copy}\\n\\t\\t\\t\\tlabel={copied ? \\"Copied\\" : \\"Copy\\"}\\n\\t\\t\\t/>\\n\\t\\t</IconButtonWrapper>\\n\\t{/if}\\n\\n\\t<BlockTitle {show_label} {info}>{label}</BlockTitle>\\n\\t{#if speakers.length !== 0 && ui_mode === \\"both\\"}\\n\\t\\t<div\\n\\t\\t\\tclass=\\"switch-container top-switch\\"\\n\\t\\t\\tclass:switch-disabled={is_formatting || is_unformatting}\\n\\t\\t>\\n\\t\\t\\t<Switch\\n\\t\\t\\t\\tlabel=\\"Plain Text\\"\\n\\t\\t\\t\\tbind:checked\\n\\t\\t\\t\\tdisabled={is_formatting || is_unformatting}\\n\\t\\t\\t\\ton:click={async (e) => {\\n\\t\\t\\t\\t\\tif (!e.detail.checked) {\\n\\t\\t\\t\\t\\t\\tis_unformatting = true;\\n\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\tvalue = await server.unformat({ text: textbox_value });\\n\\t\\t\\t\\t\\t\\t\\tdialogue_lines = [...value];\\n\\t\\t\\t\\t\\t\\t} finally {\\n\\t\\t\\t\\t\\t\\t\\tis_unformatting = false;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tis_formatting = true;\\n\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\ttextbox_value = await value_to_string(dialogue_lines);\\n\\t\\t\\t\\t\\t\\t} finally {\\n\\t\\t\\t\\t\\t\\t\\tis_formatting = false;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}}\\n\\t\\t\\t/>\\n\\t\\t</div>\\n\\t{/if}\\n\\t{#if !checked && ui_mode !== \\"text\\"}\\n\\t\\t<div\\n\\t\\t\\tclass=\\"dialogue-container\\"\\n\\t\\t\\tbind:this={dialogue_container_element}\\n\\t\\t\\tclass:loading={is_unformatting}\\n\\t\\t>\\n\\t\\t\\t{#if is_unformatting}\\n\\t\\t\\t\\t<div class=\\"loading-overlay\\" transition:fade={{ duration: 200 }}>\\n\\t\\t\\t\\t\\t<div class=\\"loading-spinner\\"></div>\\n\\t\\t\\t\\t\\t<div class=\\"loading-text\\">Converting to dialogue format...</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t\\t{#each dialogue_lines as line, i}\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\tclass=\\"dialogue-line\\"\\n\\t\\t\\t\\t\\tstyle=\\"--speaker-bg-color: {disabled &&\\n\\t\\t\\t\\t\\t(hoveredSpeaker === null || hoveredSpeaker === line.speaker)\\n\\t\\t\\t\\t\\t\\t? speakerColors[line.speaker] || \'transparent\'\\n\\t\\t\\t\\t\\t\\t: \'transparent\'}\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\tclass=\\"speaker-column\\"\\n\\t\\t\\t\\t\\t\\trole=\\"button\\"\\n\\t\\t\\t\\t\\t\\ttabindex=\\"0\\"\\n\\t\\t\\t\\t\\t\\ton:mouseenter={() => disabled && (hoveredSpeaker = line.speaker)}\\n\\t\\t\\t\\t\\t\\ton:mouseleave={() => disabled && (hoveredSpeaker = null)}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t{#if disabled}\\n\\t\\t\\t\\t\\t\\t\\t<textarea\\n\\t\\t\\t\\t\\t\\t\\t\\tbind:value={line.speaker}\\n\\t\\t\\t\\t\\t\\t\\t\\t{disabled}\\n\\t\\t\\t\\t\\t\\t\\t\\trows=\\"1\\"\\n\\t\\t\\t\\t\\t\\t\\t\\treadonly\\n\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t<BaseDropdown\\n\\t\\t\\t\\t\\t\\t\\t\\tbind:value={line.speaker}\\n\\t\\t\\t\\t\\t\\t\\t\\ton:change={() => update_line(i, \\"speaker\\", line.speaker)}\\n\\t\\t\\t\\t\\t\\t\\t\\tchoices={speakers.map((s) => [s, s])}\\n\\t\\t\\t\\t\\t\\t\\t\\tshow_label={false}\\n\\t\\t\\t\\t\\t\\t\\t\\tcontainer={true}\\n\\t\\t\\t\\t\\t\\t\\t\\tlabel={\\"\\"}\\n\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\"text-column\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\"input-container\\">\\n\\t\\t\\t\\t\\t\\t\\t<textarea\\n\\t\\t\\t\\t\\t\\t\\t\\tbind:value={line.text}\\n\\t\\t\\t\\t\\t\\t\\t\\t{placeholder}\\n\\t\\t\\t\\t\\t\\t\\t\\t{disabled}\\n\\t\\t\\t\\t\\t\\t\\t\\ton:input={(event) => handle_input(event, i)}\\n\\t\\t\\t\\t\\t\\t\\t\\ton:focus={(event) => handle_input(event, i)}\\n\\t\\t\\t\\t\\t\\t\\t\\ton:keydown={(event) => {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (event.key === \\"Escape\\" && showTagMenu) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tshowTagMenu = false;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tselectedOptionIndex = 0;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t} else if (showTagMenu && currentLineIndex === i) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (event.key === \\"ArrowDown\\") {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tselectedOptionIndex = Math.min(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tselectedOptionIndex + 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfiltered_tags.length - 1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} else if (event.key === \\"ArrowUp\\") {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tselectedOptionIndex = Math.max(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tselectedOptionIndex - 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t0\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} else if (event.key === \\"Enter\\") {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (filtered_tags[selectedOptionIndex]) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tinsert_selected_tag();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\t\\tbind:this={input_elements[i]}\\n\\t\\t\\t\\t\\t\\t\\t\\trows=\\"1\\"\\n\\t\\t\\t\\t\\t\\t\\t></textarea>\\n\\t\\t\\t\\t\\t\\t\\t{#if showTagMenu && currentLineIndex === i}\\n\\t\\t\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\"tag-menu\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"tag-menu\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttransition:fade={{ duration: 100 }}\\n\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<BaseDropdownOptions\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchoices={tags.map((s, i) => [s, i])}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfiltered_indices={filtered_tags.map((s) => tags.indexOf(s))}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tactive_index={filtered_tags.map((s) => tags.indexOf(s))[\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tselectedOptionIndex\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t]}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tshow_options={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ton:change={(e) => insert_tag(e)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{offset_from_top}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfrom_top={true}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{#if max_lines == undefined || (max_lines && i < max_lines - 1)}\\n\\t\\t\\t\\t\\t\\t<div class:action-column={i == 0} class:hidden={disabled}>\\n\\t\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"add-button\\"\\n\\t\\t\\t\\t\\t\\t\\t\\ton:click={() => add_line(i)}\\n\\t\\t\\t\\t\\t\\t\\t\\taria-label=\\"Add new line\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t{disabled}\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Plus />\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t<div class=\\"action-column\\" class:hidden={disabled || i == 0}>\\n\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"delete-button\\"\\n\\t\\t\\t\\t\\t\\t\\ton:click={() => delete_line(i)}\\n\\t\\t\\t\\t\\t\\t\\taria-label=\\"Remove current line\\"\\n\\t\\t\\t\\t\\t\\t\\t{disabled}\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<Trash />\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t{:else if checked && ui_mode !== \\"dialogue\\"}\\n\\t\\t<div class=\\"textarea-container\\" class:loading={is_formatting}>\\n\\t\\t\\t{#if is_formatting}\\n\\t\\t\\t\\t<div class=\\"loading-overlay\\" transition:fade={{ duration: 200 }}>\\n\\t\\t\\t\\t\\t<div class=\\"loading-spinner\\"></div>\\n\\t\\t\\t\\t\\t<div class=\\"loading-text\\">Converting to plain text...</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t\\t<textarea\\n\\t\\t\\t\\tdata-testid=\\"textbox\\"\\n\\t\\t\\t\\tbind:value={textbox_value}\\n\\t\\t\\t\\t{placeholder}\\n\\t\\t\\t\\trows={5}\\n\\t\\t\\t\\t{disabled}\\n\\t\\t\\t\\ton:input={(event) => {\\n\\t\\t\\t\\t\\thandle_input(event, 0);\\n\\t\\t\\t\\t}}\\n\\t\\t\\t\\ton:focus={(event) => handle_input(event, 0)}\\n\\t\\t\\t\\ton:keydown={(event) => {\\n\\t\\t\\t\\t\\tif (event.key === \\"Escape\\" && showTagMenu) {\\n\\t\\t\\t\\t\\t\\tshowTagMenu = false;\\n\\t\\t\\t\\t\\t\\tselectedOptionIndex = 0;\\n\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t} else if (showTagMenu) {\\n\\t\\t\\t\\t\\t\\tif (event.key === \\"ArrowDown\\") {\\n\\t\\t\\t\\t\\t\\t\\tselectedOptionIndex = Math.min(\\n\\t\\t\\t\\t\\t\\t\\t\\tselectedOptionIndex + 1,\\n\\t\\t\\t\\t\\t\\t\\t\\tfiltered_tags.length - 1\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t\\t} else if (event.key === \\"ArrowUp\\") {\\n\\t\\t\\t\\t\\t\\t\\tselectedOptionIndex = Math.max(selectedOptionIndex - 1, 0);\\n\\t\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t\\t} else if (event.key === \\"Enter\\") {\\n\\t\\t\\t\\t\\t\\t\\tif (filtered_tags[selectedOptionIndex]) {\\n\\t\\t\\t\\t\\t\\t\\t\\tinsert_selected_tag();\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}}\\n\\t\\t\\t\\tbind:this={textarea_element}\\n\\t\\t\\t/>\\n\\t\\t\\t{#if showTagMenu}\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\tid=\\"tag-menu\\"\\n\\t\\t\\t\\t\\tclass=\\"tag-menu-plain-text\\"\\n\\t\\t\\t\\t\\ttransition:fade={{ duration: 100 }}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<BaseDropdownOptions\\n\\t\\t\\t\\t\\t\\tchoices={tags.map((s, i) => [s, i])}\\n\\t\\t\\t\\t\\t\\tfiltered_indices={filtered_tags.map((s) => tags.indexOf(s))}\\n\\t\\t\\t\\t\\t\\tactive_index={filtered_tags.map((s) => tags.indexOf(s))[\\n\\t\\t\\t\\t\\t\\t\\tselectedOptionIndex\\n\\t\\t\\t\\t\\t\\t]}\\n\\t\\t\\t\\t\\t\\tshow_options={true}\\n\\t\\t\\t\\t\\t\\ton:change={(e) => insert_tag(e)}\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t{/if}\\n\\n\\t{#if show_submit_button && !disabled}\\n\\t\\t<div class=\\"submit-container\\">\\n\\t\\t\\t<button class=\\"submit-button\\" on:click={handle_submit} {disabled}>\\n\\t\\t\\t\\t<Send />\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t{/if}\\n</label>\\n\\n<style>\\n\\tlabel {\\n\\t\\tdisplay: block;\\n\\t\\twidth: 100%;\\n\\t}\\n\\n\\t.input-container {\\n\\t\\tdisplay: flex;\\n\\t\\tposition: relative;\\n\\t\\talign-items: flex-end;\\n\\t}\\n\\n\\t.dialogue-container {\\n\\t\\tborder: none;\\n\\t\\tborder-radius: var(--input-radius);\\n\\t\\tbackground: var(--input-background-fill);\\n\\t\\tpadding: var(--spacing-md);\\n\\t\\tmargin-bottom: var(--spacing-sm);\\n\\t\\tposition: relative;\\n\\t}\\n\\n\\t.dialogue-line {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tmargin-bottom: var(--spacing-sm);\\n\\t}\\n\\n\\t.dialogue-line:has(.action-column.hidden) .text-column {\\n\\t\\tmargin-right: 0;\\n\\t}\\n\\n\\t.speaker-column {\\n\\t\\tflex: 0 0 150px;\\n\\t\\tmargin-right: var(--spacing-sm);\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t}\\n\\n\\t.speaker-column textarea {\\n\\t\\tbackground: var(--speaker-bg-color);\\n\\t\\ttransition: background-color 0.2s ease;\\n\\t\\tborder: 1px solid var(--border-color-primary);\\n\\t\\tborder-radius: var(--radius-sm);\\n\\t\\tpadding: var(--input-padding);\\n\\t\\tcolor: var(--body-text-color);\\n\\t\\tfont-weight: var(--input-text-weight);\\n\\t\\tfont-size: var(--input-text-size);\\n\\t\\tline-height: var(--line-sm);\\n\\t\\tresize: none;\\n\\t\\twidth: 100%;\\n\\t\\tbox-sizing: border-box;\\n\\t\\theight: auto;\\n\\t\\tmin-height: 30px;\\n\\t\\tmax-height: none;\\n\\t\\tmargin-top: 0px;\\n\\t\\tmargin-bottom: 0px;\\n\\t\\tz-index: 1;\\n\\t\\tdisplay: block;\\n\\t\\tposition: relative;\\n\\t\\twhite-space: pre-wrap;\\n\\t\\tword-wrap: break-word;\\n\\t\\toverflow-wrap: break-word;\\n\\t\\toverflow: hidden;\\n\\t}\\n\\n\\t.text-column {\\n\\t\\tflex: 1;\\n\\t\\tmargin-right: var(--spacing-sm);\\n\\t}\\n\\n\\t.text-column textarea {\\n\\t\\twidth: 100%;\\n\\t\\tpadding: var(--spacing-sm);\\n\\t\\tborder: 1px solid var(--border-color-primary);\\n\\t\\tborder-radius: var(--radius-sm);\\n\\t\\tcolor: var(--body-text-color);\\n\\t\\tbackground: var(--speaker-bg-color);\\n\\t\\ttransition: background-color 0.2s ease;\\n\\t\\theight: auto;\\n\\t\\tmin-height: 30px;\\n\\t\\tmax-height: none;\\n\\t\\tflex-grow: 1;\\n\\t\\tmargin-top: 0px;\\n\\t\\tmargin-bottom: 0px;\\n\\t\\tresize: none;\\n\\t\\tz-index: 1;\\n\\t\\tdisplay: block;\\n\\t\\tposition: relative;\\n\\t\\tpadding: var(--input-padding);\\n\\t\\twidth: 100%;\\n\\t\\tcolor: var(--body-text-color);\\n\\t\\tfont-weight: var(--input-text-weight);\\n\\t\\tfont-size: var(--input-text-size);\\n\\t\\tline-height: var(--line-sm);\\n\\t\\twhite-space: pre-wrap;\\n\\t\\tword-wrap: break-word;\\n\\t\\toverflow-wrap: break-word;\\n\\t\\toverflow: hidden;\\n\\t\\tbox-sizing: border-box;\\n\\t}\\n\\n\\t.text-column textarea {\\n\\t\\tcolor: var(--body-text-color);\\n\\t}\\n\\n\\t.dialogue-line[style*=\\"--speaker-bg-color: rgba\\"] .text-column textarea,\\n\\t.dialogue-line[style*=\\"--speaker-bg-color: rgba\\"] .speaker-column textarea {\\n\\t\\tcolor: black;\\n\\t}\\n\\n\\ttextarea {\\n\\t\\tflex-grow: 1;\\n\\t\\toutline: none !important;\\n\\t\\tmargin-top: 0px;\\n\\t\\tmargin-bottom: 0px;\\n\\t\\tresize: none;\\n\\t\\tz-index: 1;\\n\\t\\tdisplay: block;\\n\\t\\tposition: relative;\\n\\t\\toutline: none !important;\\n\\t\\tbackground: var(--input-background-fill);\\n\\t\\tpadding: var(--input-padding);\\n\\t\\twidth: 100%;\\n\\t\\tcolor: var(--body-text-color);\\n\\t\\tfont-weight: var(--input-text-weight);\\n\\t\\tfont-size: var(--input-text-size);\\n\\t\\tline-height: var(--line-sm);\\n\\t\\tbox-shadow: var(--input-shadow);\\n\\t\\tborder: var(--input-border-width) solid var(--input-border-color);\\n\\t\\tborder-radius: var(--input-radius);\\n\\t}\\n\\n\\ttextarea:disabled {\\n\\t\\t-webkit-opacity: 1;\\n\\t\\topacity: 1;\\n\\t}\\n\\n\\ttextarea:focus {\\n\\t\\tbox-shadow: var(--input-shadow-focus);\\n\\t\\tborder-color: var(--input-border-color-focus);\\n\\t\\tbackground: var(--input-background-fill-focus);\\n\\t}\\n\\n\\ttextarea::placeholder {\\n\\t\\tcolor: var(--input-placeholder-color);\\n\\t}\\n\\n\\t.action-column {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: center;\\n\\t}\\n\\n\\t.add-button {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: center;\\n\\t\\talign-items: center;\\n\\t\\twidth: 25px;\\n\\t\\theight: 25px;\\n\\t\\tborder: none;\\n\\t\\tbackground: transparent;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\n\\t.delete-button {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: center;\\n\\t\\talign-items: center;\\n\\t\\twidth: 15px;\\n\\t\\theight: 15px;\\n\\t}\\n\\n\\t.add-button:hover {\\n\\t\\tcolor: var(--color-accent);\\n\\t}\\n\\n\\t.switch-container {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: flex-start;\\n\\t\\ttransition: opacity 0.2s ease-in-out;\\n\\t}\\n\\n\\t.switch-container.switch-disabled {\\n\\t\\topacity: 0.6;\\n\\t\\tpointer-events: none;\\n\\t}\\n\\n\\t.switch-container.top-switch {\\n\\t\\tmargin-bottom: var(--spacing-sm);\\n\\t\\tjustify-content: flex-end;\\n\\t}\\n\\n\\t.submit-container {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: flex-end;\\n\\t\\tmargin-top: var(--spacing-sm);\\n\\t}\\n\\n\\t.submit-container button[disabled] {\\n\\t\\tcursor: not-allowed;\\n\\t}\\n\\n\\t.submit-button {\\n\\t\\tborder: none;\\n\\t\\ttext-align: center;\\n\\t\\ttext-decoration: none;\\n\\t\\tfont-size: 14px;\\n\\t\\tcursor: pointer;\\n\\t\\tborder-radius: 15px;\\n\\t\\tmin-width: 30px;\\n\\t\\theight: 30px;\\n\\t\\tflex-shrink: 0;\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: center;\\n\\t\\talign-items: center;\\n\\t\\tbackground: var(--button-secondary-background-fill);\\n\\t\\tcolor: var(--button-secondary-text-color);\\n\\t}\\n\\n\\t.submit-button:hover {\\n\\t\\tbackground: var(--button-secondary-background-fill-hover);\\n\\t}\\n\\n\\t.submit-button:active {\\n\\t\\tbox-shadow: var(--button-shadow-active);\\n\\t}\\n\\n\\t.submit-button :global(svg) {\\n\\t\\theight: 22px;\\n\\t\\twidth: 22px;\\n\\t}\\n\\n\\t.tag-menu {\\n\\t\\tposition: absolute;\\n\\t\\twidth: 100%;\\n\\t\\ttop: 100%;\\n\\t\\tleft: 0;\\n\\t}\\n\\n\\t.tag-menu-plain-text {\\n\\t\\tposition: relative;\\n\\t\\twidth: 100%;\\n\\t}\\n\\n\\t.tag-menu-plain-text :global(.options) {\\n\\t\\tposition: static !important;\\n\\t\\twidth: 100% !important;\\n\\t\\tmax-height: none !important;\\n\\t\\ttop: auto !important;\\n\\t\\tbottom: auto !important;\\n\\t}\\n\\n\\t.hidden {\\n\\t\\tdisplay: none;\\n\\t}\\n\\n\\t.loading-overlay {\\n\\t\\tposition: absolute;\\n\\t\\ttop: 0;\\n\\t\\tleft: 0;\\n\\t\\tright: 0;\\n\\t\\tbottom: 0;\\n\\t\\tbackground: var(--input-background-fill);\\n\\t\\topacity: 0.95;\\n\\t\\tbackdrop-filter: blur(2px);\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t\\tz-index: 10;\\n\\t\\tborder-radius: var(--input-radius);\\n\\t}\\n\\n\\t.loading-spinner {\\n\\t\\twidth: 24px;\\n\\t\\theight: 24px;\\n\\t\\tborder: 2px solid var(--border-color-primary);\\n\\t\\tborder-top: 2px solid var(--color-accent);\\n\\t\\tborder-radius: 50%;\\n\\t\\tanimation: spin 1s linear infinite;\\n\\t\\tmargin-bottom: var(--spacing-sm);\\n\\t}\\n\\n\\t@keyframes spin {\\n\\t\\t0% {\\n\\t\\t\\ttransform: rotate(0deg);\\n\\t\\t}\\n\\t\\t100% {\\n\\t\\t\\ttransform: rotate(360deg);\\n\\t\\t}\\n\\t}\\n\\n\\t.loading-text {\\n\\t\\tcolor: var(--body-text-color);\\n\\t\\tfont-size: var(--text-sm);\\n\\t\\tfont-weight: 500;\\n\\t\\topacity: 0.8;\\n\\t}\\n\\n\\t.dialogue-container.loading,\\n\\t.textarea-container.loading {\\n\\t\\tposition: relative;\\n\\t\\topacity: 0.7;\\n\\t\\ttransition: opacity 0.3s ease-in-out;\\n\\t}\\n\\n\\t.dialogue-container,\\n\\t.textarea-container {\\n\\t\\ttransition: opacity 0.3s ease-in-out;\\n\\t}</style>\\n"],"names":[],"mappings":"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"}'},Ct=create_ssr_component((o,t,e,z)=>{let{speakers:a=[]}=t,{tags:d=[]}=t,{value:n=[]}=t,{value_is_output:g=!1}=t,{placeholder:m=void 0}=t,{label:x}=t,{info:h=void 0}=t,{disabled:i=!1}=t,{show_label:f=!0}=t,{container:b=!0}=t,{max_lines:c=void 0}=t,{show_copy_button:_=!1}=t,{show_submit_button:I=!0}=t,{color_map:p=null}=t,{ui_mode:u="both"}=t,v=u==="text",{server:w}=t,l=[];n&&n.length&&typeof n!="string"?l=[...n]:n&&typeof n!="string"&&(l=[{speaker:`${a.length?a[0]:""}`,text:""}]);let k,r=[],K,y=JSON.stringify(n),s="",S=null,W=!1,E=!1;const D=["red","green","blue","yellow","purple","teal","orange","cyan","lime","pink"],Z={red:"rgba(254, 202, 202, 0.7)",green:"rgba(209, 250, 229, 0.7)",blue:"rgba(219, 234, 254, 0.7)",yellow:"rgba(254, 243, 199, 0.7)",purple:"rgba(233, 213, 255, 0.7)",teal:"rgba(204, 251, 241, 0.7)",orange:"rgba(254, 215, 170, 0.7)",cyan:"rgba(207, 250, 254, 0.7)",lime:"rgba(217, 249, 157, 0.7)",pink:"rgba(252, 231, 243, 0.7)"};let Q={};a.length===0&&(v=!0,n="");const j=createEventDispatcher();function N(){j("change",n),g||j("input");}function X(A){a.length!==0&&(E=!0,n=[...A]);}async function Y(A){return typeof A=="string"?A:await w.format(A)}t.speakers===void 0&&e.speakers&&a!==void 0&&e.speakers(a),t.tags===void 0&&e.tags&&d!==void 0&&e.tags(d),t.value===void 0&&e.value&&n!==void 0&&e.value(n),t.value_is_output===void 0&&e.value_is_output&&g!==void 0&&e.value_is_output(g),t.placeholder===void 0&&e.placeholder&&m!==void 0&&e.placeholder(m),t.label===void 0&&e.label&&x!==void 0&&e.label(x),t.info===void 0&&e.info&&h!==void 0&&e.info(h),t.disabled===void 0&&e.disabled&&i!==void 0&&e.disabled(i),t.show_label===void 0&&e.show_label&&f!==void 0&&e.show_label(f),t.container===void 0&&e.container&&b!==void 0&&e.container(b),t.max_lines===void 0&&e.max_lines&&c!==void 0&&e.max_lines(c),t.show_copy_button===void 0&&e.show_copy_button&&_!==void 0&&e.show_copy_button(_),t.show_submit_button===void 0&&e.show_submit_button&&I!==void 0&&e.show_submit_button(I),t.color_map===void 0&&e.color_map&&p!==void 0&&e.color_map(p),t.ui_mode===void 0&&e.ui_mode&&u!==void 0&&e.ui_mode(u),t.server===void 0&&e.server&&w!==void 0&&e.server(w),o.css.add(st);let T,P,R=o.head;do T=!0,o.head=R,p?Q={...p}:(Q={},a.forEach((A,M)=>{const O=D[M%D.length];Q[A]=Z[O];})),JSON.stringify(n)!==y&&(n==null&&(l=[]),y=JSON.stringify(n),typeof n=="string"?s=n:typeof n=="object"&&Array.isArray(n)&&(l=[...n],(!E||v)&&Y(l).then(A=>{s=A;})),E=!1,N()),l.length>r.length?r=[...r,...Array(l.length-r.length).fill(null)]:l.length<r.length&&(r=r.slice(0,l.length)),tick().then(()=>{r.forEach(A=>{A&&A instanceof HTMLTextAreaElement&&(A.style.height="auto",A.style.height=A.scrollHeight+"px");});}),X(l),P=` <label class="${["svelte-1de6p8m",b?"container":""].join(" ").trim()}">${f&&_?`${validate_component(Ue,"IconButtonWrapper").$$render(o,{},{},{default:()=>`${validate_component(O,"IconButton").$$render(o,{Icon:Yt,label:"Copy"},{},{})}`})}`:""} ${validate_component(yt,"BlockTitle").$$render(o,{show_label:f,info:h},{},{default:()=>`${escape(x)}`})} ${a.length!==0&&u==="both"?`<div class="${["switch-container top-switch svelte-1de6p8m",""].join(" ").trim()}">${validate_component(rt,"Switch").$$render(o,{label:"Plain Text",disabled:W,checked:v},{checked:A=>{v=A,T=!1;}},{})}</div>`:""} ${!v&&u!=="text"?`<div class="${["dialogue-container svelte-1de6p8m",""].join(" ").trim()}"${add_attribute("this",k,0)}> ${each(l,(A,M)=>`<div class="dialogue-line svelte-1de6p8m" style="${"--speaker-bg-color: "+escape(i&&S===null&&Q[A.speaker]||"transparent",!0)}"><div class="speaker-column svelte-1de6p8m" role="button" tabindex="0">${i?`<textarea ${i?"disabled":""} rows="1" readonly class="svelte-1de6p8m">${escape(A.speaker||"")}</textarea>`:`${validate_component($,"BaseDropdown").$$render(o,{choices:a.map(O=>[O,O]),show_label:!1,container:!0,label:"",value:A.speaker},{value:O=>{A.speaker=O,T=!1;}},{})}`}</div> <div class="text-column svelte-1de6p8m"><div class="input-container svelte-1de6p8m"><textarea${add_attribute("placeholder",m,0)} ${i?"disabled":""} rows="1" class="svelte-1de6p8m"${add_attribute("this",r[M],0)}>${escape(A.text||"")}</textarea>  </div></div> ${c==null||c&&M<c-1?`<div class="${["svelte-1de6p8m",(M==0?"action-column":"")+" "+(i?"hidden":"")].join(" ").trim()}"><button class="add-button svelte-1de6p8m" aria-label="Add new line" ${i?"disabled":""}>${validate_component(he,"Plus").$$render(o,{},{},{})}</button> </div>`:""} <div class="${["action-column svelte-1de6p8m",i||M==0?"hidden":""].join(" ").trim()}"><button class="delete-button svelte-1de6p8m" aria-label="Remove current line" ${i?"disabled":""}>${validate_component(fe,"Trash").$$render(o,{},{},{})} </button></div> </div>`)}</div>`:`${v&&u!=="dialogue"?`<div class="${["textarea-container svelte-1de6p8m",""].join(" ").trim()}"> <textarea data-testid="textbox"${add_attribute("placeholder",m,0)}${add_attribute("rows",5,0)} ${i?"disabled":""} class="svelte-1de6p8m"${add_attribute("this",K,0)}>${escape(s||"")}</textarea> </div>`:""}`} ${I&&!i?`<div class="submit-container svelte-1de6p8m"><button class="submit-button svelte-1de6p8m" ${i?"disabled":""}>${validate_component(ue,"Send").$$render(o,{},{},{})}</button></div>`:""} </label>`;while(!T);return P}),dt=Ct,gt=create_ssr_component((o,t,e,z)=>{let{gradio:a}=t,{server:d}=t,{label:n="Dialogue"}=t,{speakers:g=[]}=t,{tags:m=[]}=t,{info:x=void 0}=t,{placeholder:h=void 0}=t,{elem_id:i=""}=t,{elem_classes:f=[]}=t,{visible:b=!0}=t,{value:c=[]}=t,{show_label:_}=t,{max_lines:I=void 0}=t,{container:p=!0}=t,{scale:u=null}=t,{min_width:v=void 0}=t,{show_copy_button:w=!1}=t,{loading_status:l=void 0}=t,{value_is_output:k=!1}=t,{interactive:r}=t,{show_submit_button:K=!0}=t,{ui_mode:y="both"}=t;t.gradio===void 0&&e.gradio&&a!==void 0&&e.gradio(a),t.server===void 0&&e.server&&d!==void 0&&e.server(d),t.label===void 0&&e.label&&n!==void 0&&e.label(n),t.speakers===void 0&&e.speakers&&g!==void 0&&e.speakers(g),t.tags===void 0&&e.tags&&m!==void 0&&e.tags(m),t.info===void 0&&e.info&&x!==void 0&&e.info(x),t.placeholder===void 0&&e.placeholder&&h!==void 0&&e.placeholder(h),t.elem_id===void 0&&e.elem_id&&i!==void 0&&e.elem_id(i),t.elem_classes===void 0&&e.elem_classes&&f!==void 0&&e.elem_classes(f),t.visible===void 0&&e.visible&&b!==void 0&&e.visible(b),t.value===void 0&&e.value&&c!==void 0&&e.value(c),t.show_label===void 0&&e.show_label&&_!==void 0&&e.show_label(_),t.max_lines===void 0&&e.max_lines&&I!==void 0&&e.max_lines(I),t.container===void 0&&e.container&&p!==void 0&&e.container(p),t.scale===void 0&&e.scale&&u!==void 0&&e.scale(u),t.min_width===void 0&&e.min_width&&v!==void 0&&e.min_width(v),t.show_copy_button===void 0&&e.show_copy_button&&w!==void 0&&e.show_copy_button(w),t.loading_status===void 0&&e.loading_status&&l!==void 0&&e.loading_status(l),t.value_is_output===void 0&&e.value_is_output&&k!==void 0&&e.value_is_output(k),t.interactive===void 0&&e.interactive&&r!==void 0&&e.interactive(r),t.show_submit_button===void 0&&e.show_submit_button&&K!==void 0&&e.show_submit_button(K),t.ui_mode===void 0&&e.ui_mode&&y!==void 0&&e.ui_mode(y);let s,S,W=o.head;do s=!0,o.head=W,S=`   ${validate_component(It,"Block").$$render(o,{visible:b,elem_id:i,elem_classes:f,scale:u,min_width:v,allow_overflow:!0,padding:p},{},{default:()=>`${l?`${validate_component(Et,"StatusTracker").$$render(o,Object.assign({},{autoscroll:a.autoscroll},{i18n:a.i18n},l),{},{})}`:""} ${validate_component(dt,"Dialogue").$$render(o,{label:n,info:x,show_label:_,max_lines:I,show_copy_button:w,container:p,speakers:g,tags:m,placeholder:h,show_submit_button:K,server:d,ui_mode:y,disabled:!r,value:c,value_is_output:k},{value:E=>{c=E,s=!1;},value_is_output:E=>{k=E,s=!1;}},{})}`})}`;while(!s);return S});

export { dt as BaseDialogue, gt as default };
//# sourceMappingURL=Index58-DuyRBphO.js.map
