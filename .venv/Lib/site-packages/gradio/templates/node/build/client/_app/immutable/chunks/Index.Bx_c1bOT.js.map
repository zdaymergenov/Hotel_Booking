{"version":3,"file":"Index.Bx_c1bOT.js","sources":["../../../../../../../dialogue/Switch.svelte","../../../../../../../dialogue/Dialogue.svelte","../../../../../../../dialogue/Index.svelte"],"sourcesContent":["<script lang=\"ts\">\n\t// based on https://svelte.dev/playground/d65a4e9f0ae74d1eb1b08d13e428af32?version=3.35.0\n\n\timport { createEventDispatcher } from \"svelte\";\n\texport let label;\n\texport let checked = false;\n\texport let disabled = false;\n\tconst dispatch = createEventDispatcher();\n\t// @ts-ignore\n\tfunction handleClick(event: Event): void {\n\t\tconst target = event.target;\n\t\t// @ts-ignore\n\t\tconst state = target.getAttribute(\"aria-checked\");\n\t\tchecked = state === \"true\" ? false : true;\n\t\tdispatch(\"click\", { checked });\n\t}\n</script>\n\n<div class=\"s s--slider\" style=\"font-size:var(--font-size-sm)px\">\n\t<button\n\t\trole=\"switch\"\n\t\taria-checked={checked}\n\t\ton:click={handleClick}\n\t\t{disabled}\n\t>\n\t</button>\n\t<span>{label}</span>\n</div>\n\n<style>\n\t.s--slider {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.s--slider button {\n\t\twidth: 3em;\n\t\theight: 1.6em;\n\t\tposition: relative;\n\t\tmargin: 0 0.5em 0 0;\n\t\tbackground: var(--button-secondary-background-fill);\n\t\tborder: none;\n\t}\n\n\t.s--slider button[disabled] {\n\t\tcursor: not-allowed;\n\t}\n\n\t.s--slider button::before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\twidth: 1.3em;\n\t\theight: 1.3em;\n\t\tbackground: #fff;\n\t\ttop: 0.13em;\n\t\tright: 1.5em;\n\t\ttransition: transform 0.3s;\n\t}\n\n\t.s--slider button[aria-checked=\"true\"] {\n\t\tbackground-color: var(--color-accent);\n\t}\n\n\t.s--slider button[aria-checked=\"true\"]::before {\n\t\ttransform: translateX(1.3em);\n\t\ttransition: transform 0.3s;\n\t}\n\n\t.s--slider button:focus {\n\t\tbox-shadow: 0 0px 0px 1px var(--color-accent);\n\t}\n\n\t/* Slider Design Option */\n\t.s--slider button {\n\t\tborder-radius: 1.5em;\n\t}\n\n\t.s--slider button::before {\n\t\tborder-radius: 100%;\n\t}\n\n\t.s--slider button:focus {\n\t\tbox-shadow: 0 0px 8px var(--accent-color);\n\t\tborder-radius: 1.5em;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, tick, onMount } from \"svelte\";\n\timport { BlockTitle, IconButton, IconButtonWrapper } from \"@gradio/atoms\";\n\timport { Copy, Check, Send, Plus, Trash } from \"@gradio/icons\";\n\timport { fade } from \"svelte/transition\";\n\timport { BaseDropdown, BaseDropdownOptions } from \"@gradio/dropdown\";\n\timport type { SelectData, CopyData } from \"@gradio/utils\";\n\timport type { DialogueLine } from \"./utils\";\n\timport Switch from \"./Switch.svelte\";\n\n\texport let speakers: string[] = [];\n\texport let tags: string[] = [];\n\texport let value: DialogueLine[] | string = [];\n\texport let value_is_output = false;\n\texport let placeholder: string | undefined = undefined;\n\texport let label: string;\n\texport let info: string | undefined = undefined;\n\texport let disabled = false;\n\texport let show_label = true;\n\texport let container = true;\n\texport let max_lines: number | undefined = undefined;\n\texport let show_copy_button = false;\n\texport let show_submit_button = true;\n\texport let color_map: Record<string, string> | null = null;\n\texport let ui_mode: \"dialogue\" | \"text\" | \"both\" = \"both\";\n\tlet checked = ui_mode === \"text\";\n\n\texport let server: {\n\t\tformat: (body: DialogueLine[]) => Promise<string>;\n\t\tunformat: (body: object) => Promise<DialogueLine[]>;\n\t};\n\n\tlet dialogue_lines: DialogueLine[] = [];\n\n\tif (value && value.length && typeof value !== \"string\") {\n\t\tdialogue_lines = [...value];\n\t} else if (value && typeof value !== \"string\") {\n\t\tdialogue_lines = [\n\t\t\t{ speaker: `${speakers.length ? speakers[0] : \"\"}`, text: \"\" }\n\t\t];\n\t}\n\n\tlet dialogue_container_element: HTMLDivElement;\n\n\tlet showTagMenu = false;\n\tlet currentLineIndex = -1;\n\tlet selectedOptionIndex = 0;\n\tlet filtered_tags: string[] = [];\n\tlet input_elements: (HTMLInputElement | HTMLTextAreaElement)[] = [];\n\tlet textarea_element: HTMLTextAreaElement;\n\tlet old_value = JSON.stringify(value);\n\tlet offset_from_top = 0;\n\tlet copied = false;\n\tlet timer: any;\n\tlet textbox_value = \"\";\n\tlet hoveredSpeaker: string | null = null;\n\tlet is_unformatting = false;\n\tlet is_formatting = false;\n\tlet is_internal_update = false;\n\n\tconst defaultColorNames = [\n\t\t\"red\",\n\t\t\"green\",\n\t\t\"blue\",\n\t\t\"yellow\",\n\t\t\"purple\",\n\t\t\"teal\",\n\t\t\"orange\",\n\t\t\"cyan\",\n\t\t\"lime\",\n\t\t\"pink\"\n\t];\n\n\tconst colorNameToHex: Record<string, string> = {\n\t\tred: \"rgba(254, 202, 202, 0.7)\",\n\t\tgreen: \"rgba(209, 250, 229, 0.7)\",\n\t\tblue: \"rgba(219, 234, 254, 0.7)\",\n\t\tyellow: \"rgba(254, 243, 199, 0.7)\",\n\t\tpurple: \"rgba(233, 213, 255, 0.7)\",\n\t\tteal: \"rgba(204, 251, 241, 0.7)\",\n\t\torange: \"rgba(254, 215, 170, 0.7)\",\n\t\tcyan: \"rgba(207, 250, 254, 0.7)\",\n\t\tlime: \"rgba(217, 249, 157, 0.7)\",\n\t\tpink: \"rgba(252, 231, 243, 0.7)\"\n\t};\n\n\tlet speakerColors: Record<string, string> = {};\n\t$: {\n\t\tif (color_map) {\n\t\t\tspeakerColors = { ...color_map };\n\t\t} else {\n\t\t\tspeakerColors = {};\n\t\t\tspeakers.forEach((speaker, index) => {\n\t\t\t\tconst colorName = defaultColorNames[index % defaultColorNames.length];\n\t\t\t\tspeakerColors[speaker] = colorNameToHex[colorName];\n\t\t\t});\n\t\t}\n\t}\n\n\tif (speakers.length === 0) {\n\t\tchecked = true;\n\t\tvalue = \"\";\n\t}\n\n\t$: {\n\t\tif (dialogue_lines.length > input_elements.length) {\n\t\t\tinput_elements = [\n\t\t\t\t...input_elements,\n\t\t\t\t...Array(dialogue_lines.length - input_elements.length).fill(null)\n\t\t\t];\n\t\t} else if (dialogue_lines.length < input_elements.length) {\n\t\t\tinput_elements = input_elements.slice(0, dialogue_lines.length);\n\t\t}\n\n\t\ttick().then(() => {\n\t\t\tinput_elements.forEach((element) => {\n\t\t\t\tif (element && element instanceof HTMLTextAreaElement) {\n\t\t\t\t\telement.style.height = \"auto\";\n\t\t\t\t\telement.style.height = element.scrollHeight + \"px\";\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction add_line(index: number): void {\n\t\tconst newSpeaker = speakers.length > 0 ? speakers[0] : \"\";\n\t\tdialogue_lines = [\n\t\t\t...dialogue_lines.slice(0, index + 1),\n\t\t\t{ speaker: newSpeaker, text: \"\" },\n\t\t\t...dialogue_lines.slice(index + 1)\n\t\t];\n\n\t\ttick().then(() => {\n\t\t\tif (input_elements[index + 1]) {\n\t\t\t\tinput_elements[index + 1].focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction delete_line(index: number): void {\n\t\tdialogue_lines = [\n\t\t\t...dialogue_lines.slice(0, index),\n\t\t\t...dialogue_lines.slice(index + 1)\n\t\t];\n\t}\n\n\tfunction update_line(\n\t\tindex: number,\n\t\tkey: keyof DialogueLine,\n\t\tvalue: string\n\t): void {\n\t\tdialogue_lines[index][key] = value;\n\t\tdialogue_lines = [...dialogue_lines];\n\t}\n\n\tfunction handle_input(event: Event, index: number): void {\n\t\tconst input = (event.target as HTMLInputElement) || HTMLTextAreaElement;\n\t\tif (input && !input_elements[index]) {\n\t\t\tinput_elements[index] = input;\n\t\t}\n\n\t\tconst cursor_position = input.selectionStart || 0;\n\t\tconst text = input.value;\n\t\tlet show_menu = false;\n\t\tlet position_reference_index = -1;\n\n\t\tif (text[cursor_position - 1] === \":\") {\n\t\t\tcurrentLineIndex = index;\n\t\t\tposition_reference_index = cursor_position;\n\t\t\tconst search_text = get_tag_search_text(text, cursor_position);\n\t\t\tfiltered_tags = tags.filter(\n\t\t\t\t(tag) =>\n\t\t\t\t\tsearch_text === \"\" ||\n\t\t\t\t\ttag.toLowerCase().includes(search_text.toLowerCase())\n\t\t\t);\n\t\t\tshow_menu = filtered_tags.length > 0;\n\t\t\tselectedOptionIndex = 0;\n\t\t} else {\n\t\t\tconst lastColonIndex = text.lastIndexOf(\":\", cursor_position - 1);\n\t\t\tif (\n\t\t\t\tlastColonIndex >= 0 &&\n\t\t\t\t!text.substring(lastColonIndex + 1, cursor_position).includes(\" \")\n\t\t\t) {\n\t\t\t\tcurrentLineIndex = index;\n\t\t\t\tposition_reference_index = lastColonIndex + 1; // Position menu relative to the start of the potential tag\n\t\t\t\tconst searchText = text.substring(lastColonIndex + 1, cursor_position);\n\t\t\t\tfiltered_tags = tags.filter(\n\t\t\t\t\t(tag) =>\n\t\t\t\t\t\tsearchText === \"\" ||\n\t\t\t\t\t\ttag.toLowerCase().includes(searchText.toLowerCase())\n\t\t\t\t);\n\t\t\t\tshow_menu = filtered_tags.length > 0;\n\t\t\t\tselectedOptionIndex = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (show_menu && position_reference_index !== -1) {\n\t\t\tshowTagMenu = true;\n\t\t\tconst input_rect = input.getBoundingClientRect();\n\t\t\t// Position menu below the current input by calculating the distance from the top of the container\n\t\t\t// and use 1.5 times the input height.\n\t\t\tif (dialogue_container_element) {\n\t\t\t\tconst container_rect =\n\t\t\t\t\tdialogue_container_element.getBoundingClientRect();\n\t\t\t\toffset_from_top =\n\t\t\t\t\tcontainer_rect.top + input_rect.height * (index + 1.5);\n\t\t\t}\n\t\t} else {\n\t\t\tshowTagMenu = false;\n\t\t}\n\t}\n\n\tfunction get_tag_search_text(text: string, cursorPosition: number): string {\n\t\tconst lastColonIndex = text.lastIndexOf(\":\", cursorPosition - 1);\n\t\tif (lastColonIndex >= 0) {\n\t\t\treturn text.substring(lastColonIndex + 1, cursorPosition);\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tasync function insert_selected_tag(): Promise<void> {\n\t\tconst tag = filtered_tags[selectedOptionIndex];\n\t\tif (tag) {\n\t\t\tlet text;\n\t\t\tlet currentInput;\n\t\t\tif (checked) {\n\t\t\t\tcurrentInput = textarea_element;\n\t\t\t\ttext = textbox_value;\n\t\t\t} else {\n\t\t\t\tcurrentInput = input_elements[currentLineIndex];\n\t\t\t\ttext = dialogue_lines[currentLineIndex].text;\n\t\t\t}\n\t\t\tconst cursorPosition = currentInput?.selectionStart || 0;\n\t\t\tconst lastColonIndex = text.lastIndexOf(\":\", cursorPosition - 1);\n\t\t\tif (lastColonIndex >= 0) {\n\t\t\t\tconst beforeColon = text.substring(0, lastColonIndex);\n\t\t\t\tconst afterCursor = text.substring(cursorPosition);\n\n\t\t\t\tif (checked) {\n\t\t\t\t\t// plain text mode: don't filter speaker tags\n\t\t\t\t\tconst newText = `${beforeColon}${tag} ${afterCursor}`;\n\t\t\t\t\ttextbox_value = newText;\n\t\t\t\t\tif (speakers.length === 0) {\n\t\t\t\t\t\tvalue = newText;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = await server.unformat({ text: newText });\n\t\t\t\t\t}\n\n\t\t\t\t\ttick().then(() => {\n\t\t\t\t\t\tif (textarea_element) {\n\t\t\t\t\t\t\tconst newCursorPosition = beforeColon.length + tag.length + 1;\n\t\t\t\t\t\t\ttextarea_element.setSelectionRange(\n\t\t\t\t\t\t\t\tnewCursorPosition,\n\t\t\t\t\t\t\t\tnewCursorPosition\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttextarea_element.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// dialogue line mode\n\t\t\t\t\tconst filteredBeforeColon = beforeColon\n\t\t\t\t\t\t.replace(/\\[S\\d+\\]/g, \"\")\n\t\t\t\t\t\t.trim();\n\t\t\t\t\tconst newText = `${filteredBeforeColon}${tag} ${afterCursor}`;\n\t\t\t\t\tupdate_line(currentLineIndex, \"text\", newText);\n\n\t\t\t\t\ttick().then(() => {\n\t\t\t\t\t\tconst updatedInput = input_elements[currentLineIndex];\n\t\t\t\t\t\tif (updatedInput) {\n\t\t\t\t\t\t\tconst newCursorPosition =\n\t\t\t\t\t\t\t\tfilteredBeforeColon.length + tag.length + 1;\n\t\t\t\t\t\t\tupdatedInput.setSelectionRange(\n\t\t\t\t\t\t\t\tnewCursorPosition,\n\t\t\t\t\t\t\t\tnewCursorPosition\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tupdatedInput.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tshowTagMenu = false;\n\t\t\tselectedOptionIndex = 0;\n\t\t}\n\t}\n\n\tasync function insert_tag(e: CustomEvent): Promise<void> {\n\t\tconst tag = tags[e.detail.target.dataset.index];\n\t\tif (tag) {\n\t\t\tlet text;\n\t\t\tlet currentInput;\n\t\t\tif (checked) {\n\t\t\t\tcurrentInput = textarea_element;\n\t\t\t\ttext = textbox_value;\n\t\t\t} else {\n\t\t\t\tcurrentInput = input_elements[currentLineIndex];\n\t\t\t\ttext = dialogue_lines[currentLineIndex].text;\n\t\t\t}\n\t\t\tconst cursorPosition = currentInput?.selectionStart || 0;\n\t\t\tconst lastColonIndex = text.lastIndexOf(\":\", cursorPosition - 1);\n\t\t\tif (lastColonIndex >= 0) {\n\t\t\t\tconst beforeColon = text.substring(0, lastColonIndex);\n\t\t\t\tconst afterCursor = text.substring(cursorPosition);\n\n\t\t\t\tif (checked) {\n\t\t\t\t\t// plain text mode: don't filter speaker tags\n\t\t\t\t\tconst newText = `${beforeColon}${tag} ${afterCursor}`;\n\t\t\t\t\ttextbox_value = newText;\n\t\t\t\t\tif (speakers.length === 0) {\n\t\t\t\t\t\tvalue = newText;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = await server.unformat({ text: newText });\n\t\t\t\t\t}\n\n\t\t\t\t\ttick().then(() => {\n\t\t\t\t\t\tif (textarea_element) {\n\t\t\t\t\t\t\tconst newCursorPosition = beforeColon.length + tag.length + 1;\n\t\t\t\t\t\t\ttextarea_element.setSelectionRange(\n\t\t\t\t\t\t\t\tnewCursorPosition,\n\t\t\t\t\t\t\t\tnewCursorPosition\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttextarea_element.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// dialogue line mode\n\t\t\t\t\tconst filteredBeforeColon = beforeColon\n\t\t\t\t\t\t.replace(/\\[S\\d+\\]/g, \"\")\n\t\t\t\t\t\t.trim();\n\t\t\t\t\tconst newText = `${filteredBeforeColon}${tag} ${afterCursor}`;\n\t\t\t\t\tupdate_line(currentLineIndex, \"text\", newText);\n\n\t\t\t\t\ttick().then(() => {\n\t\t\t\t\t\tconst updatedInput = input_elements[currentLineIndex];\n\t\t\t\t\t\tif (updatedInput) {\n\t\t\t\t\t\t\tconst newCursorPosition =\n\t\t\t\t\t\t\t\tfilteredBeforeColon.length + tag.length + 1;\n\t\t\t\t\t\t\tupdatedInput.setSelectionRange(\n\t\t\t\t\t\t\t\tnewCursorPosition,\n\t\t\t\t\t\t\t\tnewCursorPosition\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tupdatedInput.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tshowTagMenu = false;\n\t\t\tselectedOptionIndex = 0;\n\t\t}\n\t}\n\n\tfunction handle_click_outside(event: MouseEvent): void {\n\t\tif (showTagMenu) {\n\t\t\tconst target = event.target as Node;\n\t\t\tconst tagMenu = document.getElementById(\"tag-menu\");\n\t\t\tif (tagMenu && !tagMenu.contains(target)) {\n\t\t\t\tshowTagMenu = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: DialogueLine[] | string;\n\t\tsubmit: undefined;\n\t\tblur: undefined;\n\t\tselect: SelectData;\n\t\tinput: undefined;\n\t\tfocus: undefined;\n\t\tcopy: CopyData;\n\t}>();\n\n\tfunction handle_change(): void {\n\t\tdispatch(\"change\", value);\n\t\tif (!value_is_output) {\n\t\t\tdispatch(\"input\");\n\t\t}\n\t}\n\n\tfunction sync_value(dialogueLines: DialogueLine[]): void {\n\t\tif (speakers.length !== 0) {\n\t\t\tis_internal_update = true;\n\t\t\tvalue = [...dialogueLines];\n\t\t}\n\t}\n\n\t$: sync_value(dialogue_lines);\n\n\t$: if (JSON.stringify(value) !== old_value) {\n\t\tif (value == null) {\n\t\t\tdialogue_lines = [];\n\t\t}\n\t\told_value = JSON.stringify(value);\n\t\tif (typeof value === \"string\") {\n\t\t\ttextbox_value = value;\n\t\t} else if (typeof value === \"object\" && Array.isArray(value)) {\n\t\t\tdialogue_lines = [...value];\n\t\t\tif (!is_internal_update || checked) {\n\t\t\t\tvalue_to_string(dialogue_lines).then((result) => {\n\t\t\t\t\ttextbox_value = result;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tis_internal_update = false;\n\t\thandle_change();\n\t}\n\n\tasync function value_to_string(\n\t\tvalue: DialogueLine[] | string\n\t): Promise<string> {\n\t\tif (typeof value === \"string\") {\n\t\t\treturn value;\n\t\t}\n\t\treturn await server.format(value);\n\t}\n\n\tasync function handle_copy(): Promise<void> {\n\t\tif (\"clipboard\" in navigator) {\n\t\t\tconst text = await value_to_string(value);\n\t\t\tawait navigator.clipboard.writeText(text);\n\t\t\tdispatch(\"copy\", { value: text });\n\t\t\tcopy_feedback();\n\t\t}\n\t}\n\n\tfunction copy_feedback(): void {\n\t\tcopied = true;\n\t\tif (timer) clearTimeout(timer);\n\t\ttimer = setTimeout(() => {\n\t\t\tcopied = false;\n\t\t}, 1000);\n\t}\n\n\tasync function handle_submit(): Promise<void> {\n\t\tif (checked) {\n\t\t\tvalue = await server.unformat({ text: textbox_value });\n\t\t}\n\t\tdispatch(\"submit\");\n\t}\n\n\tonMount(async () => {\n\t\tif (typeof value === \"string\") {\n\t\t\ttextbox_value = value;\n\t\t} else if (value && value.length > 0) {\n\t\t\tconst formatted = await value_to_string(value);\n\t\t\ttextbox_value = formatted;\n\t\t} else {\n\t\t\ttextbox_value = \"\";\n\t\t}\n\t});\n</script>\n\n<svelte:window on:click={handle_click_outside} />\n\n<label class:container>\n\t{#if show_label && show_copy_button}\n\t\t<IconButtonWrapper>\n\t\t\t<IconButton\n\t\t\t\tIcon={copied ? Check : Copy}\n\t\t\t\ton:click={handle_copy}\n\t\t\t\tlabel={copied ? \"Copied\" : \"Copy\"}\n\t\t\t/>\n\t\t</IconButtonWrapper>\n\t{/if}\n\n\t<BlockTitle {show_label} {info}>{label}</BlockTitle>\n\t{#if speakers.length !== 0 && ui_mode === \"both\"}\n\t\t<div\n\t\t\tclass=\"switch-container top-switch\"\n\t\t\tclass:switch-disabled={is_formatting || is_unformatting}\n\t\t>\n\t\t\t<Switch\n\t\t\t\tlabel=\"Plain Text\"\n\t\t\t\tbind:checked\n\t\t\t\tdisabled={is_formatting || is_unformatting}\n\t\t\t\ton:click={async (e) => {\n\t\t\t\t\tif (!e.detail.checked) {\n\t\t\t\t\t\tis_unformatting = true;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvalue = await server.unformat({ text: textbox_value });\n\t\t\t\t\t\t\tdialogue_lines = [...value];\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tis_unformatting = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tis_formatting = true;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\ttextbox_value = await value_to_string(dialogue_lines);\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tis_formatting = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t{/if}\n\t{#if !checked && ui_mode !== \"text\"}\n\t\t<div\n\t\t\tclass=\"dialogue-container\"\n\t\t\tbind:this={dialogue_container_element}\n\t\t\tclass:loading={is_unformatting}\n\t\t>\n\t\t\t{#if is_unformatting}\n\t\t\t\t<div class=\"loading-overlay\" transition:fade={{ duration: 200 }}>\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\n\t\t\t\t\t<div class=\"loading-text\">Converting to dialogue format...</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t{#each dialogue_lines as line, i}\n\t\t\t\t<div\n\t\t\t\t\tclass=\"dialogue-line\"\n\t\t\t\t\tstyle=\"--speaker-bg-color: {disabled &&\n\t\t\t\t\t(hoveredSpeaker === null || hoveredSpeaker === line.speaker)\n\t\t\t\t\t\t? speakerColors[line.speaker] || 'transparent'\n\t\t\t\t\t\t: 'transparent'}\"\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"speaker-column\"\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\ton:mouseenter={() => disabled && (hoveredSpeaker = line.speaker)}\n\t\t\t\t\t\ton:mouseleave={() => disabled && (hoveredSpeaker = null)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{#if disabled}\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tbind:value={line.speaker}\n\t\t\t\t\t\t\t\t{disabled}\n\t\t\t\t\t\t\t\trows=\"1\"\n\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<BaseDropdown\n\t\t\t\t\t\t\t\tbind:value={line.speaker}\n\t\t\t\t\t\t\t\ton:change={() => update_line(i, \"speaker\", line.speaker)}\n\t\t\t\t\t\t\t\tchoices={speakers.map((s) => [s, s])}\n\t\t\t\t\t\t\t\tshow_label={false}\n\t\t\t\t\t\t\t\tcontainer={true}\n\t\t\t\t\t\t\t\tlabel={\"\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"text-column\">\n\t\t\t\t\t\t<div class=\"input-container\">\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tbind:value={line.text}\n\t\t\t\t\t\t\t\t{placeholder}\n\t\t\t\t\t\t\t\t{disabled}\n\t\t\t\t\t\t\t\ton:input={(event) => handle_input(event, i)}\n\t\t\t\t\t\t\t\ton:focus={(event) => handle_input(event, i)}\n\t\t\t\t\t\t\t\ton:keydown={(event) => {\n\t\t\t\t\t\t\t\t\tif (event.key === \"Escape\" && showTagMenu) {\n\t\t\t\t\t\t\t\t\t\tshowTagMenu = false;\n\t\t\t\t\t\t\t\t\t\tselectedOptionIndex = 0;\n\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t} else if (showTagMenu && currentLineIndex === i) {\n\t\t\t\t\t\t\t\t\t\tif (event.key === \"ArrowDown\") {\n\t\t\t\t\t\t\t\t\t\t\tselectedOptionIndex = Math.min(\n\t\t\t\t\t\t\t\t\t\t\t\tselectedOptionIndex + 1,\n\t\t\t\t\t\t\t\t\t\t\t\tfiltered_tags.length - 1\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\t} else if (event.key === \"ArrowUp\") {\n\t\t\t\t\t\t\t\t\t\t\tselectedOptionIndex = Math.max(\n\t\t\t\t\t\t\t\t\t\t\t\tselectedOptionIndex - 1,\n\t\t\t\t\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\t} else if (event.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\t\t\tif (filtered_tags[selectedOptionIndex]) {\n\t\t\t\t\t\t\t\t\t\t\t\tinsert_selected_tag();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tbind:this={input_elements[i]}\n\t\t\t\t\t\t\t\trows=\"1\"\n\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t\t{#if showTagMenu && currentLineIndex === i}\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tid=\"tag-menu\"\n\t\t\t\t\t\t\t\t\tclass=\"tag-menu\"\n\t\t\t\t\t\t\t\t\ttransition:fade={{ duration: 100 }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<BaseDropdownOptions\n\t\t\t\t\t\t\t\t\t\tchoices={tags.map((s, i) => [s, i])}\n\t\t\t\t\t\t\t\t\t\tfiltered_indices={filtered_tags.map((s) => tags.indexOf(s))}\n\t\t\t\t\t\t\t\t\t\tactive_index={filtered_tags.map((s) => tags.indexOf(s))[\n\t\t\t\t\t\t\t\t\t\t\tselectedOptionIndex\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\tshow_options={true}\n\t\t\t\t\t\t\t\t\t\ton:change={(e) => insert_tag(e)}\n\t\t\t\t\t\t\t\t\t\t{offset_from_top}\n\t\t\t\t\t\t\t\t\t\tfrom_top={true}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{#if max_lines == undefined || (max_lines && i < max_lines - 1)}\n\t\t\t\t\t\t<div class:action-column={i == 0} class:hidden={disabled}>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"add-button\"\n\t\t\t\t\t\t\t\ton:click={() => add_line(i)}\n\t\t\t\t\t\t\t\taria-label=\"Add new line\"\n\t\t\t\t\t\t\t\t{disabled}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Plus />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t\t<div class=\"action-column\" class:hidden={disabled || i == 0}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"delete-button\"\n\t\t\t\t\t\t\ton:click={() => delete_line(i)}\n\t\t\t\t\t\t\taria-label=\"Remove current line\"\n\t\t\t\t\t\t\t{disabled}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Trash />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t{:else if checked && ui_mode !== \"dialogue\"}\n\t\t<div class=\"textarea-container\" class:loading={is_formatting}>\n\t\t\t{#if is_formatting}\n\t\t\t\t<div class=\"loading-overlay\" transition:fade={{ duration: 200 }}>\n\t\t\t\t\t<div class=\"loading-spinner\"></div>\n\t\t\t\t\t<div class=\"loading-text\">Converting to plain text...</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t<textarea\n\t\t\t\tdata-testid=\"textbox\"\n\t\t\t\tbind:value={textbox_value}\n\t\t\t\t{placeholder}\n\t\t\t\trows={5}\n\t\t\t\t{disabled}\n\t\t\t\ton:input={(event) => {\n\t\t\t\t\thandle_input(event, 0);\n\t\t\t\t}}\n\t\t\t\ton:focus={(event) => handle_input(event, 0)}\n\t\t\t\ton:keydown={(event) => {\n\t\t\t\t\tif (event.key === \"Escape\" && showTagMenu) {\n\t\t\t\t\t\tshowTagMenu = false;\n\t\t\t\t\t\tselectedOptionIndex = 0;\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t} else if (showTagMenu) {\n\t\t\t\t\t\tif (event.key === \"ArrowDown\") {\n\t\t\t\t\t\t\tselectedOptionIndex = Math.min(\n\t\t\t\t\t\t\t\tselectedOptionIndex + 1,\n\t\t\t\t\t\t\t\tfiltered_tags.length - 1\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t} else if (event.key === \"ArrowUp\") {\n\t\t\t\t\t\t\tselectedOptionIndex = Math.max(selectedOptionIndex - 1, 0);\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t} else if (event.key === \"Enter\") {\n\t\t\t\t\t\t\tif (filtered_tags[selectedOptionIndex]) {\n\t\t\t\t\t\t\t\tinsert_selected_tag();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tbind:this={textarea_element}\n\t\t\t/>\n\t\t\t{#if showTagMenu}\n\t\t\t\t<div\n\t\t\t\t\tid=\"tag-menu\"\n\t\t\t\t\tclass=\"tag-menu-plain-text\"\n\t\t\t\t\ttransition:fade={{ duration: 100 }}\n\t\t\t\t>\n\t\t\t\t\t<BaseDropdownOptions\n\t\t\t\t\t\tchoices={tags.map((s, i) => [s, i])}\n\t\t\t\t\t\tfiltered_indices={filtered_tags.map((s) => tags.indexOf(s))}\n\t\t\t\t\t\tactive_index={filtered_tags.map((s) => tags.indexOf(s))[\n\t\t\t\t\t\t\tselectedOptionIndex\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tshow_options={true}\n\t\t\t\t\t\ton:change={(e) => insert_tag(e)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t{/if}\n\n\t{#if show_submit_button && !disabled}\n\t\t<div class=\"submit-container\">\n\t\t\t<button class=\"submit-button\" on:click={handle_submit} {disabled}>\n\t\t\t\t<Send />\n\t\t\t</button>\n\t\t</div>\n\t{/if}\n</label>\n\n<style>\n\tlabel {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t}\n\n\t.input-container {\n\t\tdisplay: flex;\n\t\tposition: relative;\n\t\talign-items: flex-end;\n\t}\n\n\t.dialogue-container {\n\t\tborder: none;\n\t\tborder-radius: var(--input-radius);\n\t\tbackground: var(--input-background-fill);\n\t\tpadding: var(--spacing-md);\n\t\tmargin-bottom: var(--spacing-sm);\n\t\tposition: relative;\n\t}\n\n\t.dialogue-line {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-bottom: var(--spacing-sm);\n\t}\n\n\t.dialogue-line:has(.action-column.hidden) .text-column {\n\t\tmargin-right: 0;\n\t}\n\n\t.speaker-column {\n\t\tflex: 0 0 150px;\n\t\tmargin-right: var(--spacing-sm);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.speaker-column textarea {\n\t\tbackground: var(--speaker-bg-color);\n\t\ttransition: background-color 0.2s ease;\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-sm);\n\t\tpadding: var(--input-padding);\n\t\tcolor: var(--body-text-color);\n\t\tfont-weight: var(--input-text-weight);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-sm);\n\t\tresize: none;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t\theight: auto;\n\t\tmin-height: 30px;\n\t\tmax-height: none;\n\t\tmargin-top: 0px;\n\t\tmargin-bottom: 0px;\n\t\tz-index: 1;\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\twhite-space: pre-wrap;\n\t\tword-wrap: break-word;\n\t\toverflow-wrap: break-word;\n\t\toverflow: hidden;\n\t}\n\n\t.text-column {\n\t\tflex: 1;\n\t\tmargin-right: var(--spacing-sm);\n\t}\n\n\t.text-column textarea {\n\t\twidth: 100%;\n\t\tpadding: var(--spacing-sm);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-sm);\n\t\tcolor: var(--body-text-color);\n\t\tbackground: var(--speaker-bg-color);\n\t\ttransition: background-color 0.2s ease;\n\t\theight: auto;\n\t\tmin-height: 30px;\n\t\tmax-height: none;\n\t\tflex-grow: 1;\n\t\tmargin-top: 0px;\n\t\tmargin-bottom: 0px;\n\t\tresize: none;\n\t\tz-index: 1;\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\tpadding: var(--input-padding);\n\t\twidth: 100%;\n\t\tcolor: var(--body-text-color);\n\t\tfont-weight: var(--input-text-weight);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-sm);\n\t\twhite-space: pre-wrap;\n\t\tword-wrap: break-word;\n\t\toverflow-wrap: break-word;\n\t\toverflow: hidden;\n\t\tbox-sizing: border-box;\n\t}\n\n\t.text-column textarea {\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.dialogue-line[style*=\"--speaker-bg-color: rgba\"] .text-column textarea,\n\t.dialogue-line[style*=\"--speaker-bg-color: rgba\"] .speaker-column textarea {\n\t\tcolor: black;\n\t}\n\n\ttextarea {\n\t\tflex-grow: 1;\n\t\toutline: none !important;\n\t\tmargin-top: 0px;\n\t\tmargin-bottom: 0px;\n\t\tresize: none;\n\t\tz-index: 1;\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\toutline: none !important;\n\t\tbackground: var(--input-background-fill);\n\t\tpadding: var(--input-padding);\n\t\twidth: 100%;\n\t\tcolor: var(--body-text-color);\n\t\tfont-weight: var(--input-text-weight);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-sm);\n\t\tbox-shadow: var(--input-shadow);\n\t\tborder: var(--input-border-width) solid var(--input-border-color);\n\t\tborder-radius: var(--input-radius);\n\t}\n\n\ttextarea:disabled {\n\t\t-webkit-opacity: 1;\n\t\topacity: 1;\n\t}\n\n\ttextarea:focus {\n\t\tbox-shadow: var(--input-shadow-focus);\n\t\tborder-color: var(--input-border-color-focus);\n\t\tbackground: var(--input-background-fill-focus);\n\t}\n\n\ttextarea::placeholder {\n\t\tcolor: var(--input-placeholder-color);\n\t}\n\n\t.action-column {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n\n\t.add-button {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: 25px;\n\t\theight: 25px;\n\t\tborder: none;\n\t\tbackground: transparent;\n\t\tcursor: pointer;\n\t}\n\n\t.delete-button {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: 15px;\n\t\theight: 15px;\n\t}\n\n\t.add-button:hover {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.switch-container {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start;\n\t\ttransition: opacity 0.2s ease-in-out;\n\t}\n\n\t.switch-container.switch-disabled {\n\t\topacity: 0.6;\n\t\tpointer-events: none;\n\t}\n\n\t.switch-container.top-switch {\n\t\tmargin-bottom: var(--spacing-sm);\n\t\tjustify-content: flex-end;\n\t}\n\n\t.submit-container {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tmargin-top: var(--spacing-sm);\n\t}\n\n\t.submit-container button[disabled] {\n\t\tcursor: not-allowed;\n\t}\n\n\t.submit-button {\n\t\tborder: none;\n\t\ttext-align: center;\n\t\ttext-decoration: none;\n\t\tfont-size: 14px;\n\t\tcursor: pointer;\n\t\tborder-radius: 15px;\n\t\tmin-width: 30px;\n\t\theight: 30px;\n\t\tflex-shrink: 0;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tbackground: var(--button-secondary-background-fill);\n\t\tcolor: var(--button-secondary-text-color);\n\t}\n\n\t.submit-button:hover {\n\t\tbackground: var(--button-secondary-background-fill-hover);\n\t}\n\n\t.submit-button:active {\n\t\tbox-shadow: var(--button-shadow-active);\n\t}\n\n\t.submit-button :global(svg) {\n\t\theight: 22px;\n\t\twidth: 22px;\n\t}\n\n\t.tag-menu {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\ttop: 100%;\n\t\tleft: 0;\n\t}\n\n\t.tag-menu-plain-text {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t}\n\n\t.tag-menu-plain-text :global(.options) {\n\t\tposition: static !important;\n\t\twidth: 100% !important;\n\t\tmax-height: none !important;\n\t\ttop: auto !important;\n\t\tbottom: auto !important;\n\t}\n\n\t.hidden {\n\t\tdisplay: none;\n\t}\n\n\t.loading-overlay {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground: var(--input-background-fill);\n\t\topacity: 0.95;\n\t\tbackdrop-filter: blur(2px);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tz-index: 10;\n\t\tborder-radius: var(--input-radius);\n\t}\n\n\t.loading-spinner {\n\t\twidth: 24px;\n\t\theight: 24px;\n\t\tborder: 2px solid var(--border-color-primary);\n\t\tborder-top: 2px solid var(--color-accent);\n\t\tborder-radius: 50%;\n\t\tanimation: spin 1s linear infinite;\n\t\tmargin-bottom: var(--spacing-sm);\n\t}\n\n\t@keyframes spin {\n\t\t0% {\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\n\t.loading-text {\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--text-sm);\n\t\tfont-weight: 500;\n\t\topacity: 0.8;\n\t}\n\n\t.dialogue-container.loading,\n\t.textarea-container.loading {\n\t\tposition: relative;\n\t\topacity: 0.7;\n\t\ttransition: opacity 0.3s ease-in-out;\n\t}\n\n\t.dialogue-container,\n\t.textarea-container {\n\t\ttransition: opacity 0.3s ease-in-out;\n\t}\n</style>\n","<svelte:options accessors={true} />\n\n<script context=\"module\" lang=\"ts\">\n\texport { default as BaseDialogue } from \"./Dialogue.svelte\";\n\texport { default as BaseExample } from \"./Example.svelte\";\n</script>\n\n<script lang=\"ts\">\n\timport type { Gradio, SelectData, CopyData } from \"@gradio/utils\";\n\timport Dialogue from \"./Dialogue.svelte\";\n\timport { Block } from \"@gradio/atoms\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker\";\n\timport type { DialogueLine } from \"./utils\";\n\texport let gradio: Gradio<{\n\t\tchange: DialogueLine[] | string;\n\t\tsubmit: never;\n\t\tblur: never;\n\t\tselect: SelectData;\n\t\tinput: never;\n\t\tfocus: never;\n\t\tclear_status: LoadingStatus;\n\t\tcopy: CopyData;\n\t}>;\n\n\texport let server: {\n\t\tformat: (body: DialogueLine[]) => Promise<string>;\n\t\tunformat: (body: object) => Promise<DialogueLine[]>;\n\t};\n\n\texport let label = \"Dialogue\";\n\texport let speakers: string[] = [];\n\texport let tags: string[] = [];\n\texport let info: string | undefined = undefined;\n\texport let placeholder: string | undefined = undefined;\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible: boolean | \"hidden\" = true;\n\texport let value: DialogueLine[] | string = [];\n\texport let show_label: boolean;\n\texport let max_lines: number | undefined = undefined;\n\texport let container = true;\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let show_copy_button = false;\n\texport let loading_status: LoadingStatus | undefined = undefined;\n\texport let value_is_output = false;\n\texport let interactive: boolean;\n\texport let show_submit_button = true;\n\texport let ui_mode: \"dialogue\" | \"text\" | \"both\" = \"both\";\n</script>\n\n<Block\n\t{visible}\n\t{elem_id}\n\t{elem_classes}\n\t{scale}\n\t{min_width}\n\tallow_overflow={true}\n\tpadding={container}\n>\n\t{#if loading_status}\n\t\t<StatusTracker\n\t\t\tautoscroll={gradio.autoscroll}\n\t\t\ti18n={gradio.i18n}\n\t\t\t{...loading_status}\n\t\t\ton:clear_status={() => gradio.dispatch(\"clear_status\", loading_status)}\n\t\t/>\n\t{/if}\n\n\t<Dialogue\n\t\tbind:value\n\t\tbind:value_is_output\n\t\t{label}\n\t\t{info}\n\t\t{show_label}\n\t\t{max_lines}\n\t\t{show_copy_button}\n\t\t{container}\n\t\t{speakers}\n\t\t{tags}\n\t\t{placeholder}\n\t\t{show_submit_button}\n\t\t{server}\n\t\t{ui_mode}\n\t\ton:change={() => gradio.dispatch(\"change\", value)}\n\t\ton:input={() => gradio.dispatch(\"input\")}\n\t\ton:submit={() => gradio.dispatch(\"submit\")}\n\t\ton:blur={() => gradio.dispatch(\"blur\")}\n\t\ton:select={(e) => gradio.dispatch(\"select\", e.detail)}\n\t\ton:focus={() => gradio.dispatch(\"focus\")}\n\t\ton:copy={(e) => gradio.dispatch(\"copy\", e.detail)}\n\t\tdisabled={!interactive}\n\t/>\n</Block>\n"],"names":["ctx","insert_hydration","target","div","anchor","append_hydration","button","span","label","$$props","checked","disabled","dispatch","createEventDispatcher","handleClick","event","state","Check","Copy","toggle_class","dirty","switch_1_changes","create_if_block_8","create_if_block_7","textarea","create_if_block_5","i","each_blocks","div2","div2_transition","create_bidirectional_transition","fade","func_4","basedropdownoptions_changes","div_transition","func","basedropdown_props","basedropdown_changes","set_input_value","func_1","create_if_block_3","create_if_block_2","div4","div0","div1","div3","if_block0","create_if_block_10","if_block1","create_if_block_9","if_block3","create_if_block","label_1","get_tag_search_text","text","cursorPosition","lastColonIndex","s","speakers","tags","value","value_is_output","placeholder","info","show_label","container","max_lines","show_copy_button","show_submit_button","color_map","ui_mode","server","dialogue_lines","dialogue_container_element","showTagMenu","currentLineIndex","selectedOptionIndex","filtered_tags","input_elements","textarea_element","old_value","offset_from_top","copied","timer","textbox_value","hoveredSpeaker","is_unformatting","is_formatting","is_internal_update","defaultColorNames","colorNameToHex","speakerColors","add_line","index","newSpeaker","$$invalidate","tick","delete_line","update_line","key","handle_input","input","cursor_position","show_menu","position_reference_index","search_text","tag","searchText","input_rect","container_rect","insert_selected_tag","currentInput","beforeColon","afterCursor","newText","newCursorPosition","filteredBeforeColon","updatedInput","insert_tag","e","handle_click_outside","tagMenu","handle_change","sync_value","dialogueLines","value_to_string","handle_copy","copy_feedback","handle_submit","onMount","formatted","$$self","line","value$1","change_handler","mouseenter_handler","input_handler","focus_handler","$$value","func_2","func_3","click_handler_1","click_handler_2","focus_handler_1","func_5","func_6","speaker","colorName","result","element","gradio","elem_id","elem_classes","visible","scale","min_width","loading_status","interactive","clear_status_handler"],"mappings":"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"}