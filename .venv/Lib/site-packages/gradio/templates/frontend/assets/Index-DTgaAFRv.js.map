{"version":3,"file":"Index-DTgaAFRv.js","sources":["../../../../js/checkboxgroup/Index.svelte"],"sourcesContent":["<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n\timport type { Gradio, SelectData } from \"@gradio/utils\";\n\timport { Block, BlockTitle } from \"@gradio/atoms\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker\";\n\n\texport let gradio: Gradio<{\n\t\tchange: never;\n\t\tselect: SelectData;\n\t\tinput: never;\n\t\tclear_status: LoadingStatus;\n\t}>;\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible: boolean | \"hidden\" = true;\n\texport let value: (string | number)[] = [];\n\texport let choices: [string, string | number][];\n\texport let container = true;\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let label = gradio.i18n(\"checkbox.checkbox_group\");\n\texport let info: string | undefined = undefined;\n\texport let show_label = true;\n\texport let show_select_all = false;\n\n\texport let loading_status: LoadingStatus;\n\texport let interactive = true;\n\texport let old_value = value.slice();\n\n\tfunction toggle_choice(choice: string | number): void {\n\t\tif (value.includes(choice)) {\n\t\t\tvalue = value.filter((v) => v !== choice);\n\t\t} else {\n\t\t\tvalue = [...value, choice];\n\t\t}\n\t\tgradio.dispatch(\"input\");\n\t}\n\n\tfunction toggle_select_all(): void {\n\t\tconst all_values = choices.map(([, internal_value]) => internal_value);\n\t\tif (value.length === all_values.length) {\n\t\t\tvalue = [];\n\t\t} else {\n\t\t\tvalue = all_values.slice();\n\t\t}\n\t\tgradio.dispatch(\"input\");\n\t}\n\n\t$: select_all_state = (() => {\n\t\tconst all_values = choices.map(([, internal_value]) => internal_value);\n\t\tif (value.length === 0) return \"unchecked\";\n\t\tif (value.length === all_values.length) return \"checked\";\n\t\treturn \"indeterminate\";\n\t})();\n\n\t$: disabled = !interactive;\n\n\t$: if (JSON.stringify(old_value) !== JSON.stringify(value)) {\n\t\told_value = value;\n\t\tgradio.dispatch(\"change\");\n\t}\n</script>\n\n<Block\n\t{visible}\n\t{elem_id}\n\t{elem_classes}\n\ttype=\"fieldset\"\n\t{container}\n\t{scale}\n\t{min_width}\n>\n\t<StatusTracker\n\t\tautoscroll={gradio.autoscroll}\n\t\ti18n={gradio.i18n}\n\t\t{...loading_status}\n\t\ton:clear_status={() => gradio.dispatch(\"clear_status\", loading_status)}\n\t/>\n\t<BlockTitle\n\t\tshow_label={show_label || (show_select_all && interactive)}\n\t\t{info}\n\t>\n\t\t{#if show_select_all && interactive}\n\t\t\t<div class=\"select-all-container\">\n\t\t\t\t<label class=\"select-all-label\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclass=\"select-all-checkbox\"\n\t\t\t\t\t\ton:change={toggle_select_all}\n\t\t\t\t\t\tchecked={select_all_state === \"checked\"}\n\t\t\t\t\t\tindeterminate={select_all_state === \"indeterminate\"}\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\ttitle=\"Select/Deselect All\"\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<button type=\"button\" class=\"label-text\" on:click={toggle_select_all}>\n\t\t\t\t\t{show_label ? label : \"Select All\"}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t{:else if show_label}\n\t\t\t{label}\n\t\t{/if}\n\t</BlockTitle>\n\n\t<div class=\"wrap\" data-testid=\"checkbox-group\">\n\t\t{#each choices as [display_value, internal_value], i}\n\t\t\t<label class:disabled class:selected={value.includes(internal_value)}>\n\t\t\t\t<input\n\t\t\t\t\t{disabled}\n\t\t\t\t\ton:change={() => toggle_choice(internal_value)}\n\t\t\t\t\ton:input={(evt) =>\n\t\t\t\t\t\tgradio.dispatch(\"select\", {\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tvalue: internal_value,\n\t\t\t\t\t\t\tselected: evt.currentTarget.checked\n\t\t\t\t\t\t})}\n\t\t\t\t\ton:keydown={(event) => {\n\t\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\t\ttoggle_choice(internal_value);\n\t\t\t\t\t\t\tgradio.dispatch(\"select\", {\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tvalue: internal_value,\n\t\t\t\t\t\t\t\tselected: !value.includes(internal_value)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tchecked={value.includes(internal_value)}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tname={internal_value?.toString()}\n\t\t\t\t\ttitle={internal_value?.toString()}\n\t\t\t\t/>\n\t\t\t\t<span class=\"ml-2\">{display_value}</span>\n\t\t\t</label>\n\t\t{/each}\n\t</div>\n</Block>\n\n<style>\n\t.wrap {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: var(--checkbox-label-gap);\n\t}\n\tlabel {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\ttransition: var(--button-transition);\n\t\tcursor: pointer;\n\t\tbox-shadow: var(--checkbox-label-shadow);\n\t\tborder: var(--checkbox-label-border-width) solid\n\t\t\tvar(--checkbox-label-border-color);\n\t\tborder-radius: var(--checkbox-border-radius);\n\t\tbackground: var(--checkbox-label-background-fill);\n\t\tpadding: var(--checkbox-label-padding);\n\t\tcolor: var(--checkbox-label-text-color);\n\t\tfont-weight: var(--checkbox-label-text-weight);\n\t\tfont-size: var(--checkbox-label-text-size);\n\t\tline-height: var(--line-md);\n\t}\n\n\tlabel:hover {\n\t\tbackground: var(--checkbox-label-background-fill-hover);\n\t}\n\tlabel:focus {\n\t\tbackground: var(--checkbox-label-background-fill-focus);\n\t}\n\tlabel.selected {\n\t\tbackground: var(--checkbox-label-background-fill-selected);\n\t\tcolor: var(--checkbox-label-text-color-selected);\n\t\tborder-color: var(--checkbox-label-border-color-selected);\n\t}\n\n\tlabel > * + * {\n\t\tmargin-left: var(--size-2);\n\t}\n\n\tinput {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\tbox-shadow: var(--checkbox-shadow);\n\t\tborder: var(--checkbox-border-width) solid var(--checkbox-border-color);\n\t\tborder-radius: var(--checkbox-border-radius);\n\t\tbackground-color: var(--checkbox-background-color);\n\t\tline-height: var(--line-sm);\n\t}\n\n\tinput:checked,\n\tinput:checked:hover,\n\tinput:checked:focus {\n\t\tborder-color: var(--checkbox-border-color-selected);\n\t\tbackground-image: var(--checkbox-check);\n\t\tbackground-color: var(--checkbox-background-color-selected);\n\t}\n\n\tinput:checked:focus {\n\t\tborder-color: var(--checkbox-border-color-focus);\n\t\tbackground-image: var(--checkbox-check);\n\t\tbackground-color: var(--checkbox-background-color-selected);\n\t}\n\n\tinput:hover {\n\t\tborder-color: var(--checkbox-border-color-hover);\n\t\tbackground-color: var(--checkbox-background-color-hover);\n\t}\n\n\tinput:not(:checked):focus {\n\t\tborder-color: var(--checkbox-border-color-focus);\n\t}\n\n\tinput[disabled],\n\t.disabled {\n\t\tcursor: not-allowed;\n\t}\n\n\tinput:hover {\n\t\tcursor: pointer;\n\t}\n\n\t.select-all-container {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: var(--size-2);\n\t}\n\n\t.select-all-label {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tcursor: pointer;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tbackground: none;\n\t\tborder: none;\n\t\tbox-shadow: none;\n\t}\n\n\t.select-all-checkbox {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\tbox-shadow: var(--checkbox-shadow);\n\t\tborder: var(--checkbox-border-width) solid var(--checkbox-border-color);\n\t\tborder-radius: var(--checkbox-border-radius);\n\t\tbackground-color: var(--checkbox-background-color);\n\t\tline-height: var(--line-sm);\n\t\tmargin: 0;\n\t}\n\n\t.select-all-checkbox:checked,\n\t.select-all-checkbox:checked:hover,\n\t.select-all-checkbox:checked:focus {\n\t\tborder-color: var(--checkbox-border-color-selected);\n\t\tbackground-image: var(--checkbox-check);\n\t\tbackground-color: var(--checkbox-background-color-selected);\n\t}\n\n\t.select-all-checkbox:indeterminate,\n\t.select-all-checkbox:indeterminate:hover {\n\t\tborder-color: var(--checkbox-border-color-selected);\n\t\tbackground-color: var(--checkbox-background-color-selected);\n\t\tposition: relative;\n\t}\n\n\t.select-all-checkbox:indeterminate::after {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\twidth: 60%;\n\t\theight: 2px;\n\t\tbackground-color: white;\n\t}\n\n\t.select-all-checkbox:not(:indeterminate):not(:checked):hover {\n\t\tborder-color: var(--checkbox-border-color-hover);\n\t\tbackground-color: var(--checkbox-background-color-hover);\n\t\tcursor: pointer;\n\t}\n\n\t.label-text {\n\t\tmargin: 0;\n\t\tcursor: pointer;\n\t\tbackground: none;\n\t\tborder: none;\n\t\tpadding: 0;\n\t\tfont: inherit;\n\t\tcolor: inherit;\n\t\ttext-align: left;\n\t}\n</style>\n"],"names":["ctx","input","input_checked_value","input_indeterminate_value","insert","target","div","anchor","append","label_1","button","dirty","set_data","t1","t1_value","create_if_block","create_if_block_1","attr","input_name_value","input_title_value","span","i","gradio","$$props","elem_id","elem_classes","visible","value","choices","container","scale","min_width","label","info","show_label","show_select_all","loading_status","interactive","old_value","toggle_choice","choice","$$invalidate","v","toggle_select_all","all_values","internal_value","clear_status_handler","change_handler","input_handler","evt","event","select_all_state","disabled"],"mappings":"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"}